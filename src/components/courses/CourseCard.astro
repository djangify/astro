---
// src/components/courses/CourseCard.astro
import type { Course } from "../../types";

interface Props {
  course: Course;
  showEnrollButton?: boolean;
  isEnrolled?: boolean;
}

const { course, showEnrollButton = true, isEnrolled = false } = Astro.props;

// Helper function to get duration display - fallback if no duration
const getDurationDisplay = (duration?: number): string => {
  if (!duration || duration < 60) return duration ? `${duration} mins` : "";
  const hours = Math.floor(duration / 60);
  const mins = duration % 60;
  return mins > 0 ? `${hours}h ${mins}m` : `${hours}h`;
};

// Helper function to get level badge color - fallback to beginner
const getLevelColor = (level?: string): string => {
  if (!level) return "bg-gray-100 text-gray-800";
  switch (level.toLowerCase()) {
    case "beginner":
      return "bg-green-100 text-green-800";
    case "intermediate":
      return "bg-yellow-100 text-yellow-800";
    case "advanced":
      return "bg-red-100 text-red-800";
    default:
      return "bg-gray-100 text-gray-800";
  }
};
---

<div
  class="bg-white rounded-lg shadow-lg overflow-hidden hover:shadow-xl transition-shadow duration-300"
>
  <!-- Course Image -->
  <div class="relative">
    {
      course.featured_image ? (
        <img
          src={course.featured_image}
          alt={course.title}
          class="w-full h-48 object-cover"
          loading="lazy"
        />
      ) : (
        <div class="w-full h-48 bg-gradient-to-br from-teal-400 to-teal-600 flex items-center justify-center">
          <svg
            class="h-16 w-16 text-white opacity-50"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"
            />
          </svg>
        </div>
      )
    }

    <!-- Level Badge - only show if level exists -->
    <div class="absolute top-3 left-3">
      <span
        class={`px-2 py-1 text-xs font-medium rounded-full ${getLevelColor()}`}
      >
        Course
      </span>
    </div>

    <!-- Price Badge -->
    {
      course.price && course.price > 0 ? (
        <div class="absolute top-3 right-3">
          <span class="bg-white text-teal-700 px-2 py-1 text-sm font-bold rounded-full shadow">
            ${course.price}
          </span>
        </div>
      ) : (
        <div class="absolute top-3 right-3">
          <span class="bg-green-500 text-white px-2 py-1 text-sm font-bold rounded-full shadow">
            FREE
          </span>
        </div>
      )
    }

    <!-- Enrolled Badge -->
    {
      isEnrolled && (
        <div class="absolute bottom-3 right-3">
          <span class="bg-teal-700 text-white px-2 py-1 text-xs font-medium rounded-full flex items-center">
            <svg class="h-3 w-3 mr-1" fill="currentColor" viewBox="0 0 20 20">
              <path
                fill-rule="evenodd"
                d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                clip-rule="evenodd"
              />
            </svg>
            Enrolled
          </span>
        </div>
      )
    }
  </div>

  <!-- Course Content -->
  <div class="p-6">
    <!-- Category -->
    {
      course.category && (
        <div class="mb-2">
          <span class="text-teal-600 text-sm font-medium">
            {course.category.name}
          </span>
        </div>
      )
    }

    <!-- Title -->
    <h3 class="text-xl font-bold text-gray-900 mb-2 line-clamp-2">
      {course.title}
    </h3>

    <!-- Description -->
    {
      course.description && (
        <p class="text-gray-600 text-sm mb-4 line-clamp-3">
          {course.description}
        </p>
      )
    }

    <!-- Course Meta Info -->
    <div class="flex items-center justify-between text-sm text-gray-500 mb-4">
      <div class="flex items-center space-x-4">
        <!-- Show basic course info -->
        <div class="flex items-center">
          <svg
            class="h-4 w-4 mr-1"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"
            ></path>
          </svg>
          Online Course
        </div>
      </div>
    </div>

    <!-- Instructor -->
    {
      course.instructor && (
        <div class="flex items-center mb-4">
          <div class="flex items-center">
            <div class="w-8 h-8 rounded-full bg-gray-300 flex items-center justify-center mr-2">
              <svg
                class="h-4 w-4 text-gray-600"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
                />
              </svg>
            </div>
            <div>
              <div class="text-sm font-medium text-gray-900">
                {course.instructor.name}
              </div>
              <div class="text-xs text-gray-500">Instructor</div>
            </div>
          </div>
        </div>
      )
    }

    <!-- Action Buttons -->
    <div class="flex space-x-3">
      <a
        href={`/courses/${course.slug}`}
        class="flex-1 bg-gray-100 hover:bg-gray-200 text-gray-800 font-medium py-2 px-4 rounded-lg transition-colors text-center text-sm"
      >
        View Details
      </a>

      {
        showEnrollButton && !isEnrolled && (
          <button
            class="flex-1 bg-teal-700 hover:bg-teal-800 text-white font-medium py-2 px-4 rounded-lg transition-colors text-sm enroll-btn"
            data-course-id={course.id}
          >
            {course.price > 0 ? `Enroll - ${course.price}` : "Enroll Free"}
          </button>
        )
      }

      {
        isEnrolled && (
          <a
            href={`/courses/${course.slug}`}
            class="flex-1 bg-teal-700 hover:bg-teal-800 text-white font-medium py-2 px-4 rounded-lg transition-colors text-center text-sm"
          >
            Continue Learning
          </a>
        )
      }
    </div>
  </div>
</div>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
