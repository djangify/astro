---
// src/components/CartIcon.astro - FIXED - No Dynamic Imports

export interface Props {
  className?: string;
}

const { className = "" } = Astro.props;
---

<div class={`cart-icon relative ${className}`} id="cart-icon-container">
  <!-- Cart Button -->
  <button
    type="button"
    id="cart-button"
    class="relative flex items-center text-gray-700 hover:text-teal-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500 p-2 rounded-md transition-colors"
    aria-label="View shopping cart"
  >
    <!-- Cart SVG Icon -->
    <svg
      class="w-6 h-6"
      fill="none"
      stroke="currentColor"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 7m0 0l-1.5-5M7 13l-2-8m0 0h16m-7 4v8a2 2 0 01-2 2H9a2 2 0 01-2-2v-8a2 2 0 012-2h2a2 2 0 012 2z"
      ></path>
    </svg>

    <!-- Item Count Badge -->
    <span
      id="cart-count-badge"
      class="absolute -top-1 -right-1 bg-teal-600 text-white text-xs font-bold rounded-full h-5 w-5 items-center justify-center hidden"
      aria-hidden="true"
    >
      0
    </span>
  </button>

  <!-- Cart Dropdown (initially hidden) -->
  <div
    id="cart-dropdown"
    class="hidden absolute right-0 mt-2 w-80 bg-white rounded-lg shadow-xl border border-gray-200 z-50"
    role="menu"
    aria-orientation="vertical"
    aria-labelledby="cart-button"
  >
    <!-- Dropdown content will be populated by JavaScript -->
    <div id="cart-dropdown-content">
      <!-- Loading state -->
      <div id="cart-loading" class="p-4 text-center text-gray-500">
        <svg class="animate-spin h-5 w-5 mx-auto mb-2" viewBox="0 0 24 24">
          <circle
            class="opacity-25"
            cx="12"
            cy="12"
            r="10"
            stroke="currentColor"
            stroke-width="4"
            fill="none"></circle>
          <path
            class="opacity-75"
            fill="currentColor"
            d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
          ></path>
        </svg>
        Loading cart...
      </div>

      <!-- Empty cart state -->
      <div id="cart-empty" class="hidden p-6 text-center">
        <svg
          class="w-12 h-12 mx-auto mb-4 text-gray-300"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 7m0 0l-1.5-5M7 13l-2-8m0 0h16"
          ></path>
        </svg>
        <p class="text-gray-500 mb-4">Your cart is empty</p>
        <a
          href="/ecommerce"
          class="inline-block bg-teal-600 text-white px-4 py-2 rounded-md hover:bg-teal-700 transition-colors text-sm font-medium"
        >
          Start Shopping
        </a>
      </div>

      <!-- Cart items container -->
      <div id="cart-items" class="hidden">
        <div class="p-4 border-b border-gray-100">
          <h3 class="text-lg font-semibold text-gray-900">Shopping Cart</h3>
        </div>

        <!-- Items list -->
        <div id="cart-items-list" class="max-h-64 overflow-y-auto">
          <!-- Cart items will be populated here -->
        </div>

        <!-- Cart summary -->
        <div class="p-4 border-t border-gray-100 bg-gray-50">
          <div class="flex justify-between items-center mb-3">
            <span class="text-sm text-gray-600">Subtotal:</span>
            <span id="cart-subtotal" class="font-semibold text-gray-900"
              >$0.00</span
            >
          </div>

          <!-- Cart type indicator -->
          <div id="cart-type-indicator" class="hidden mb-3">
            <span
              class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium"
            >
              <span id="cart-type-icon" class="mr-1"></span>
              <span id="cart-type-text"></span>
            </span>
          </div>

          <div class="space-y-2">
            <a
              href="/cart"
              class="block w-full text-center bg-gray-100 text-gray-800 hover:bg-gray-200 font-medium py-2 px-4 rounded-md transition-colors text-sm"
            >
              View Cart
            </a>
            <a
              href="/checkout"
              id="checkout-button"
              class="block w-full text-center bg-teal-600 text-white hover:bg-teal-700 font-medium py-2 px-4 rounded-md transition-colors text-sm"
            >
              Checkout
            </a>
          </div>
        </div>
      </div>

      <!-- Error state -->
      <div id="cart-error" class="hidden p-6 text-center">
        <svg
          class="w-12 h-12 mx-auto mb-4 text-red-300"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
        </svg>
        <p class="text-red-600 mb-4">Failed to load cart</p>
        <button
          id="retry-cart-load"
          class="inline-block bg-teal-600 text-white px-4 py-2 rounded-md hover:bg-teal-700 transition-colors text-sm font-medium"
        >
          Try Again
        </button>
      </div>
    </div>
  </div>
</div>

<!-- Cart Icon Component -->
<div class={`relative ${className}`}>
  <!-- Cart Icon Button -->
  <button
    id="cart-button"
    class="relative p-2 text-gray-600 hover:text-blue-600 transition-colors duration-200"
    aria-label="Shopping cart"
  >
    <svg
      class="w-6 h-6"
      fill="none"
      stroke="currentColor"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 7m0 0l-1.5-5M7 13l-2-8m0 0h16m-7 4v8a2 2 0 01-2 2H9a2 2 0 01-2-2v-8a2 2 0 012-2h2a2 2 0 012 2z"
      ></path>
    </svg>

    <!-- Cart Count Badge -->
    <span
      id="cart-count"
      class="absolute -top-1 -right-1 bg-blue-600 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center"
      data-cart-count
    >
      0
    </span>
  </button>

  <!-- Cart Dropdown -->
  <div
    id="cart-dropdown"
    class="absolute right-0 mt-2 w-80 bg-white rounded-lg shadow-xl border border-gray-200 z-50 hidden"
  >
    <!-- Dropdown Header -->
    <div class="p-4 border-b border-gray-100">
      <div class="flex items-center justify-between">
        <h3 class="text-lg font-semibold text-gray-900">Shopping Cart</h3>
        <button
          id="close-cart-dropdown"
          class="text-gray-400 hover:text-gray-600"
        >
          <svg
            class="w-5 h-5"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
    </div>

    <!-- Cart Items -->
    <div id="cart-items-container" class="max-h-64 overflow-y-auto">
      <!-- Loading State -->
      <div id="cart-loading" class="p-4 text-center text-gray-500">
        <div
          class="animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600 mx-auto mb-2"
        >
        </div>
        Loading...
      </div>

      <!-- Empty State -->
      <div id="cart-empty" class="p-4 text-center text-gray-500 hidden">
        <svg
          class="w-12 h-12 mx-auto mb-2 text-gray-300"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
        </svg>
        <p>Your cart is empty</p>
      </div>

      <!-- Cart Items List -->
      <div id="cart-items-list" class="hidden">
        <!-- Items will be populated by JavaScript -->
      </div>
    </div>

    <!-- Cart Footer -->
    <div id="cart-footer" class="p-4 border-t border-gray-100 hidden">
      <div class="flex justify-between items-center mb-3">
        <span class="font-semibold">Total:</span>
        <span id="cart-total" class="font-bold text-lg" data-cart-subtotal
          >$0.00</span
        >
      </div>

      <div class="space-y-2">
        <a
          href="/cart"
          class="block w-full bg-gray-100 hover:bg-gray-200 text-gray-800 font-medium py-2 px-4 rounded-lg text-center transition-colors"
        >
          View Cart
        </a>
        <a
          href="/checkout"
          class="block w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-lg text-center transition-colors"
        >
          Checkout
        </a>
      </div>
    </div>
  </div>
</div>

<!-- Inline Cart Icon Script -->
<script is:inline>
  (function () {
    var API_BASE = "https://corrison.corrisonapi.com/api/v1";

    function getToken() {
      try {
        return localStorage.getItem("cart_token");
      } catch (e) {
        return null;
      }
    }

    function makeHeaders() {
      var h = { "Content-Type": "application/json" };
      var t = getToken();
      if (t) h.Authorization = "Bearer " + t;
      return h;
    }

    function updateCartIcon(cart) {
      var countEl = document.getElementById("cart-count");
      var totalEl = document.getElementById("cart-total");

      if (cart && cart.total_items > 0) {
        if (countEl) {
          countEl.textContent = cart.total_items;
          countEl.classList.remove("hidden");
        }
        if (totalEl && cart.subtotal) {
          totalEl.textContent = "$" + parseFloat(cart.subtotal).toFixed(2);
        }
      } else {
        if (countEl) {
          countEl.classList.add("hidden");
        }
        if (totalEl) {
          totalEl.textContent = "$0.00";
        }
      }
    }

    function showCartDropdown(cart) {
      var dropdown = document.getElementById("cart-dropdown");
      var loading = document.getElementById("cart-loading");
      var empty = document.getElementById("cart-empty");
      var itemsList = document.getElementById("cart-items-list");
      var footer = document.getElementById("cart-footer");

      if (!dropdown) return;

      // Hide loading
      if (loading) loading.classList.add("hidden");

      if (!cart || cart.total_items === 0) {
        // Show empty state
        if (empty) empty.classList.remove("hidden");
        if (itemsList) itemsList.classList.add("hidden");
        if (footer) footer.classList.add("hidden");
      } else {
        // Show cart items
        if (empty) empty.classList.add("hidden");
        if (itemsList) itemsList.classList.remove("hidden");
        if (footer) footer.classList.remove("hidden");

        // Render items (simplified)
        if (itemsList && cart.items) {
          itemsList.innerHTML = cart.items
            .map(function (item) {
              var product = item.product || {};
              var price = parseFloat(item.total_price || product.price || 0);
              return (
                '<div class="p-3 border-b border-gray-100 flex items-center space-x-3">' +
                '<div class="flex-1">' +
                '<h4 class="font-medium text-sm">' +
                (product.name || "Product") +
                "</h4>" +
                '<p class="text-xs text-gray-500">Qty: ' +
                (item.quantity || 1) +
                "</p>" +
                "</div>" +
                '<span class="font-medium text-sm">$' +
                price.toFixed(2) +
                "</span>" +
                "</div>"
              );
            })
            .join("");
        }
      }

      // Show dropdown
      dropdown.classList.remove("hidden");
    }

    function hideCartDropdown() {
      var dropdown = document.getElementById("cart-dropdown");
      if (dropdown) dropdown.classList.add("hidden");
    }

    function loadCartData() {
      return fetch(API_BASE + "/cart/", { headers: makeHeaders() })
        .then(function (r) {
          return r.ok ? r.json() : null;
        })
        .catch(function () {
          return null;
        });
    }

    function initCartIcon() {
      var cartButton = document.getElementById("cart-button");
      var closeButton = document.getElementById("close-cart-dropdown");

      // Load and display cart data
      loadCartData().then(function (cart) {
        updateCartIcon(cart);
      });

      // Cart button click
      if (cartButton) {
        cartButton.addEventListener("click", function (e) {
          e.preventDefault();
          e.stopPropagation();

          loadCartData().then(function (cart) {
            updateCartIcon(cart);
            showCartDropdown(cart);
          });
        });
      }

      // Close button
      if (closeButton) {
        closeButton.addEventListener("click", function (e) {
          e.preventDefault();
          e.stopPropagation();
          hideCartDropdown();
        });
      }

      // Click outside to close
      document.addEventListener("click", function (e) {
        var dropdown = document.getElementById("cart-dropdown");
        var cartButton = document.getElementById("cart-button");

        if (
          dropdown &&
          !dropdown.contains(e.target) &&
          !cartButton.contains(e.target)
        ) {
          hideCartDropdown();
        }
      });
    }

    // Initialize when DOM is ready
    if (document.readyState === "loading") {
      document.addEventListener("DOMContentLoaded", initCartIcon);
    } else {
      initCartIcon();
    }
  })();
</script>
