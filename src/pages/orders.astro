---
// src/pages/orders.astro
import BaseLayout from "../layouts/BaseLayout.astro";
import DashboardNav from "../components/dashboard/DashboardNav.astro";
---

<BaseLayout>
  <title slot="title">Order History – Corrison</title>
  <meta
    slot="head"
    name="description"
    content="View your order history and download your digital purchases."
  />

  <!-- Dashboard Navigation -->
  <DashboardNav currentPage="orders" />

  <!-- Main Content with Sidebar Layout -->
  <div class="lg:ml-64">
    <main class="py-6">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <!-- Page Header -->
        <div class="mb-8">
          <h1 class="text-3xl font-semibold text-gray-900">Order History</h1>
          <p class="mt-2 text-lg text-gray-600">
            View your past orders and download digital products
          </p>
        </div>

        <!-- Loading State -->
        <div id="loading-state" class="text-center py-16">
          <div
            class="animate-spin rounded-full h-12 w-12 border-b-2 border-teal-700 mx-auto mb-4"
          >
          </div>
          <p class="text-gray-600">Loading your orders...</p>
        </div>

        <!-- Not Authenticated State -->
        <div id="not-authenticated" class="text-center py-16 hidden">
          <svg
            class="h-16 w-16 mx-auto text-gray-300 mb-4"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"
            ></path>
          </svg>
          <h2 class="text-2xl font-bold text-gray-900 mb-4">Please Sign In</h2>
          <p class="text-gray-600 mb-6">
            You need to be signed in to view your orders.
          </p>
          <a
            href="/login"
            class="bg-teal-700 hover:bg-teal-800 text-white font-medium px-6 py-3 rounded-lg transition-colors"
          >
            Sign In
          </a>
        </div>

        <!-- Orders Content -->
        <div id="orders-content" class="hidden">
          <!-- Order Statistics -->
          <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
            <div class="bg-white rounded-lg shadow-sm p-6 text-center">
              <div class="text-3xl font-bold text-gray-900" id="total-orders">
                0
              </div>
              <div class="text-sm text-gray-600">Total Orders</div>
            </div>
            <div class="bg-white rounded-lg shadow-sm p-6 text-center">
              <div
                class="text-3xl font-bold text-blue-600"
                id="digital-products"
              >
                0
              </div>
              <div class="text-sm text-gray-600">Digital Products</div>
            </div>
            <div class="bg-white rounded-lg shadow-sm p-6 text-center">
              <div
                class="text-3xl font-bold text-purple-600"
                id="total-downloads"
              >
                0
              </div>
              <div class="text-sm text-gray-600">Downloads Available</div>
            </div>
            <div class="bg-white rounded-lg shadow-sm p-6 text-center">
              <div class="text-3xl font-bold text-teal-700" id="total-spent">
                $0
              </div>
              <div class="text-sm text-gray-600">Total Spent</div>
            </div>
          </div>

          <!-- Quick Actions -->
          <div class="mb-6 bg-blue-50 border border-blue-200 rounded-lg p-4">
            <div class="flex items-center justify-between">
              <div class="flex items-center">
                <svg
                  class="w-5 h-5 text-blue-600 mr-2"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10"
                  ></path>
                </svg>
                <span class="text-blue-800 font-medium">
                  Looking for your downloads?
                </span>
              </div>
              <a
                href="/downloads"
                class="text-blue-600 hover:text-blue-700 font-medium text-sm"
              >
                View Downloads →
              </a>
            </div>
          </div>

          <!-- Orders List -->
          <div id="orders-list" class="space-y-6">
            <!-- Orders will be populated by JavaScript -->
          </div>
        </div>

        <!-- Empty State -->
        <div id="empty-state" class="text-center py-16 hidden">
          <svg
            class="h-16 w-16 mx-auto text-gray-300 mb-4"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"
            ></path>
          </svg>
          <h2 class="text-2xl font-bold text-gray-900 mb-4">No Orders Yet</h2>
          <p class="text-gray-600 mb-6">
            Start exploring our digital products.
          </p>
          <a
            href="/ecommerce/products"
            class="bg-teal-700 hover:bg-teal-800 text-white font-medium px-6 py-3 rounded-lg transition-colors"
          >
            Browse Products
          </a>
        </div>
      </div>
    </main>
  </div>
</BaseLayout>

<script is:inline>
  document.addEventListener("DOMContentLoaded", function () {
    var allOrders = [];
    var API_BASE = window.location.origin.includes("localhost")
      ? "http://localhost:8000/api/v1"
      : "https://corrison.corrisonapi.com/api/v1";

    // Initialize page
    initializePage();

    function initializePage() {
      // Check authentication
      var isAuthenticated = checkAuthentication();

      if (!isAuthenticated) {
        showNotAuthenticatedState();
        return;
      }

      // Load orders data
      loadOrdersData();
    }

    function checkAuthentication() {
      var token = localStorage.getItem("access_token");
      return !!token;
    }

    function loadOrdersData() {
      var token = localStorage.getItem("access_token");

      fetch(API_BASE + "/orders/", {
        method: "GET",
        headers: {
          Authorization: "Bearer " + token,
          "Content-Type": "application/json",
        },
      })
        .then(function (response) {
          if (!response.ok) {
            throw new Error("Failed to fetch orders");
          }
          return response.json();
        })
        .then(function (orders) {
          allOrders = orders;

          if (allOrders.length === 0) {
            showEmptyState();
          } else {
            showOrdersContent();
            updateStatistics();
            renderOrders();
          }
        })
        .catch(function (error) {
          console.error("Error loading orders:", error);
          showNotAuthenticatedState();
        })
        .finally(function () {
          hideLoadingState();
        });
    }

    function updateStatistics() {
      var totalOrders = allOrders.length;
      var digitalProducts = 0;
      var totalDownloads = 0;
      var totalSpent = 0;

      allOrders.forEach(function (order) {
        totalSpent += parseFloat(order.total || 0);

        if (order.items) {
          order.items.forEach(function (item) {
            if (item.is_digital) {
              digitalProducts++;
              if (item.can_download) {
                totalDownloads++;
              }
            }
          });
        }
      });

      document.getElementById("total-orders").textContent = totalOrders;
      document.getElementById("digital-products").textContent = digitalProducts;
      document.getElementById("total-downloads").textContent = totalDownloads;
      document.getElementById("total-spent").textContent =
        "$" + totalSpent.toFixed(2);
    }

    function renderOrders() {
      var ordersList = document.getElementById("orders-list");

      // Sort by most recent
      allOrders.sort(function (a, b) {
        return (
          new Date(b.created_at).getTime() - new Date(a.created_at).getTime()
        );
      });

      // Render orders
      ordersList.innerHTML = allOrders
        .map(function (order) {
          return createOrderCard(order);
        })
        .join("");
    }

    function createOrderCard(order) {
      var orderDate = new Date(order.created_at).toLocaleDateString();
      var hasDigitalItems =
        order.items &&
        order.items.some(function (item) {
          return item.is_digital;
        });

      var statusColor = order.payment_status === "paid" ? "green" : "yellow";
      var statusText =
        order.payment_status === "paid" ? "Completed" : "Pending";

      return (
        '<div class="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden">' +
        '<div class="p-6">' +
        '<div class="flex flex-col md:flex-row md:items-center md:justify-between mb-4">' +
        "<div>" +
        '<h3 class="text-lg font-medium text-gray-900 mb-1">' +
        "Order #" +
        (order.order_number || order.id) +
        "</h3>" +
        '<p class="text-sm text-gray-600">' +
        "Placed on " +
        orderDate +
        "</p>" +
        "</div>" +
        '<div class="mt-3 md:mt-0 flex items-center space-x-4">' +
        '<span class="px-3 py-1 text-sm font-medium rounded-full bg-' +
        statusColor +
        "-100 text-" +
        statusColor +
        '-800">' +
        statusText +
        "</span>" +
        '<span class="text-lg font-bold text-gray-900">' +
        "$" +
        parseFloat(order.total || 0).toFixed(2) +
        "</span>" +
        "</div>" +
        "</div>" +
        (order.items && order.items.length > 0
          ? '<div class="border-t border-gray-200 pt-4">' +
            '<div class="space-y-3">' +
            order.items
              .map(function (item) {
                return (
                  '<div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg">' +
                  "<div>" +
                  '<p class="font-medium text-gray-900">' +
                  item.product_name +
                  "</p>" +
                  '<p class="text-sm text-gray-500">Qty: ' +
                  item.quantity +
                  " • $" +
                  parseFloat(item.price).toFixed(2) +
                  " each</p>" +
                  "</div>" +
                  (item.is_digital && item.can_download && item.download_url
                    ? '<a href="' +
                      item.download_url +
                      '" ' +
                      'class="text-blue-600 hover:text-blue-700 font-medium text-sm">' +
                      "Download" +
                      "</a>"
                    : "") +
                  "</div>"
                );
              })
              .join("") +
            "</div>" +
            "</div>"
          : "") +
        '<div class="flex flex-col sm:flex-row gap-3 mt-4">' +
        '<a href="/order-confirmation/' +
        order.order_number +
        '" ' +
        'class="flex-1 text-center bg-gray-100 hover:bg-gray-200 text-gray-800 font-medium py-2 px-4 rounded-lg transition-colors text-sm">' +
        "View Details" +
        "</a>" +
        (hasDigitalItems
          ? '<a href="/downloads" ' +
            'class="flex-1 text-center bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-lg transition-colors text-sm">' +
            "View All Downloads" +
            "</a>"
          : "") +
        "</div>" +
        "</div>" +
        "</div>"
      );
    }

    function hideLoadingState() {
      document.getElementById("loading-state").classList.add("hidden");
    }

    function showNotAuthenticatedState() {
      hideLoadingState();
      document.getElementById("not-authenticated").classList.remove("hidden");
    }

    function showOrdersContent() {
      document.getElementById("orders-content").classList.remove("hidden");
    }

    function showEmptyState() {
      hideLoadingState();
      document.getElementById("empty-state").classList.remove("hidden");
    }
  });
</script>
