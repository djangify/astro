---
// src/pages/ecommerce/index.astro
import BaseLayout from "../../layouts/BaseLayout.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
---

<BaseLayout>
  <Header slot="header" />
  <title slot="title">Shop – Corrison Ecommerce Platform</title>
  <meta
    slot="head"
    name="description"
    content="Discover our comprehensive ecommerce platform featuring both physical and digital products with advanced filtering, search, and cart functionality."
  />

  <div
    class="min-h-screen bg-gradient-to-br from-gray-50 via-blue-50 to-purple-50"
  >
    <!-- Hero Section with Animated Background -->
    <section
      class="relative overflow-hidden bg-gradient-to-r from-blue-600 via-purple-600 to-indigo-700"
    >
      <!-- Animated Background Elements -->
      <div class="absolute inset-0">
        <div
          class="absolute top-0 left-0 w-72 h-72 bg-white opacity-10 rounded-full mix-blend-multiply animate-pulse"
        >
        </div>
        <div
          class="absolute top-0 right-0 w-96 h-96 bg-pink-300 opacity-10 rounded-full mix-blend-multiply animate-pulse delay-1000"
        >
        </div>
        <div
          class="absolute bottom-0 left-1/3 w-80 h-80 bg-yellow-300 opacity-10 rounded-full mix-blend-multiply animate-pulse delay-2000"
        >
        </div>
      </div>

      <div class="relative container mx-auto px-4 py-20">
        <div class="text-center max-w-4xl mx-auto">
          <h1
            class="text-5xl md:text-7xl font-bold text-white mb-6 animate-fade-in"
          >
            Next-Gen
            <span
              class="bg-gradient-to-r from-yellow-400 to-pink-400 bg-clip-text text-transparent"
            >
              Ecommerce
            </span>
          </h1>
          <p
            class="text-xl md:text-2xl text-blue-100 mb-8 max-w-3xl mx-auto animate-fade-in-delay"
          >
            Showcase of a powerful headless commerce platform supporting both
            physical and digital products with advanced features and modern
            design.
          </p>
          <div
            class="flex flex-col sm:flex-row gap-4 justify-center animate-fade-in-delay-2"
          >
            <button
              id="explore-products-btn"
              class="bg-white text-blue-600 hover:bg-blue-50 font-bold py-4 px-8 rounded-full transition-all duration-300 transform hover:scale-105 shadow-lg"
            >
              Explore Products
            </button>
            <button
              id="view-categories-btn"
              class="border-2 border-white text-white hover:bg-white hover:text-blue-600 font-bold py-4 px-8 rounded-full transition-all duration-300 transform hover:scale-105"
            >
              Browse Categories
            </button>
          </div>
        </div>
      </div>

      <!-- Scroll indicator -->
      <div
        class="absolute bottom-8 left-1/2 transform -translate-x-1/2 animate-bounce"
      >
        <svg
          class="w-6 h-6 text-white"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M19 14l-7 7m0 0l-7-7m7 7V3"></path>
        </svg>
      </div>
    </section>

    <!-- Features Overview Section -->
    <section class="py-20 bg-white">
      <div class="container mx-auto px-4">
        <div class="text-center mb-16">
          <h2 class="text-4xl font-bold text-gray-900 mb-6">
            Platform Capabilities
          </h2>
          <p class="text-xl text-gray-600 max-w-3xl mx-auto">
            A comprehensive headless ecommerce solution built with Django REST
            API and modern frontend technologies.
          </p>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          <!-- Feature Cards with Hover Animations -->
          <div
            class="group relative bg-gradient-to-br from-blue-500 to-blue-600 rounded-2xl p-8 text-white transform transition-all duration-300 hover:scale-105 hover:shadow-2xl"
          >
            <div
              class="absolute inset-0 bg-gradient-to-br from-blue-400 to-purple-600 rounded-2xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"
            >
            </div>
            <div class="relative z-10">
              <div
                class="w-12 h-12 bg-white bg-opacity-20 rounded-lg flex items-center justify-center mb-4"
              >
                <svg
                  class="w-6 h-6"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"
                  ></path>
                </svg>
              </div>
              <h3 class="text-xl font-bold mb-3">Physical Products</h3>
              <p class="text-blue-100">
                Complete inventory management with shipping calculations, stock
                tracking, and variant support.
              </p>
            </div>
          </div>

          <div
            class="group relative bg-gradient-to-br from-purple-500 to-purple-600 rounded-2xl p-8 text-white transform transition-all duration-300 hover:scale-105 hover:shadow-2xl"
          >
            <div
              class="absolute inset-0 bg-gradient-to-br from-purple-400 to-pink-600 rounded-2xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"
            >
            </div>
            <div class="relative z-10">
              <div
                class="w-12 h-12 bg-white bg-opacity-20 rounded-lg flex items-center justify-center mb-4"
              >
                <svg
                  class="w-6 h-6"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10"
                  ></path>
                </svg>
              </div>
              <h3 class="text-xl font-bold mb-3">Digital Downloads</h3>
              <p class="text-purple-100">
                Secure digital product delivery with download limits, expiry
                controls, and instant access.
              </p>
            </div>
          </div>

          <div
            class="group relative bg-gradient-to-br from-green-500 to-green-600 rounded-2xl p-8 text-white transform transition-all duration-300 hover:scale-105 hover:shadow-2xl"
          >
            <div
              class="absolute inset-0 bg-gradient-to-br from-green-400 to-teal-600 rounded-2xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"
            >
            </div>
            <div class="relative z-10">
              <div
                class="w-12 h-12 bg-white bg-opacity-20 rounded-lg flex items-center justify-center mb-4"
              >
                <svg
                  class="w-6 h-6"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 7m0 0l-1.5-5M7 13l-2-8m0 0h16m-7 4v8a2 2 0 01-2 2H9a2 2 0 01-2-2v-8a2 2 0 012-2h2a2 2 0 012 2z"
                  ></path>
                </svg>
              </div>
              <h3 class="text-xl font-bold mb-3">Smart Cart & Checkout</h3>
              <p class="text-green-100">
                Advanced cart management with Stripe integration, order
                tracking, and seamless checkout flow.
              </p>
            </div>
          </div>

          <div
            class="group relative bg-gradient-to-br from-orange-500 to-orange-600 rounded-2xl p-8 text-white transform transition-all duration-300 hover:scale-105 hover:shadow-2xl"
          >
            <div
              class="absolute inset-0 bg-gradient-to-br from-orange-400 to-red-600 rounded-2xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"
            >
            </div>
            <div class="relative z-10">
              <div
                class="w-12 h-12 bg-white bg-opacity-20 rounded-lg flex items-center justify-center mb-4"
              >
                <svg
                  class="w-6 h-6"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                </svg>
              </div>
              <h3 class="text-xl font-bold mb-3">Advanced Search & Filters</h3>
              <p class="text-orange-100">
                Powerful search capabilities with category filtering, price
                ranges, and real-time results.
              </p>
            </div>
          </div>

          <div
            class="group relative bg-gradient-to-br from-teal-500 to-teal-600 rounded-2xl p-8 text-white transform transition-all duration-300 hover:scale-105 hover:shadow-2xl"
          >
            <div
              class="absolute inset-0 bg-gradient-to-br from-teal-400 to-blue-600 rounded-2xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"
            >
            </div>
            <div class="relative z-10">
              <div
                class="w-12 h-12 bg-white bg-opacity-20 rounded-lg flex items-center justify-center mb-4"
              >
                <svg
                  class="w-6 h-6"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"
                  ></path>
                </svg>
              </div>
              <h3 class="text-xl font-bold mb-3">REST API First</h3>
              <p class="text-teal-100">
                Headless architecture with comprehensive REST API for maximum
                flexibility and integration.
              </p>
            </div>
          </div>

          <div
            class="group relative bg-gradient-to-br from-pink-500 to-pink-600 rounded-2xl p-8 text-white transform transition-all duration-300 hover:scale-105 hover:shadow-2xl"
          >
            <div
              class="absolute inset-0 bg-gradient-to-br from-pink-400 to-purple-600 rounded-2xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"
            >
            </div>
            <div class="relative z-10">
              <div
                class="w-12 h-12 bg-white bg-opacity-20 rounded-lg flex items-center justify-center mb-4"
              >
                <svg
                  class="w-6 h-6"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"
                  ></path>
                </svg>
              </div>
              <h3 class="text-xl font-bold mb-3">User Experience</h3>
              <p class="text-pink-100">
                Wishlist functionality, user accounts, order history, and
                personalized recommendations.
              </p>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Live Demo Section -->
    <section class="py-20 bg-gray-900 text-white">
      <div class="container mx-auto px-4">
        <div class="text-center mb-16">
          <h2 class="text-4xl font-bold mb-6">See It In Action</h2>
          <p class="text-xl text-gray-300 max-w-3xl mx-auto">
            Explore our live product catalog with real data, powered by Django
            REST API and modern frontend technologies.
          </p>
        </div>

        <!-- Quick Stats -->
        <div class="grid grid-cols-2 md:grid-cols-4 gap-8 mb-16">
          <div class="text-center">
            <div
              class="text-4xl font-bold text-blue-400 mb-2"
              id="products-count"
            >
              0
            </div>
            <div class="text-gray-400">Products</div>
          </div>
          <div class="text-center">
            <div
              class="text-4xl font-bold text-purple-400 mb-2"
              id="categories-count"
            >
              0
            </div>
            <div class="text-gray-400">Categories</div>
          </div>
          <div class="text-center">
            <div
              class="text-4xl font-bold text-green-400 mb-2"
              id="digital-count"
            >
              0
            </div>
            <div class="text-gray-400">Digital Items</div>
          </div>
          <div class="text-center">
            <div
              class="text-4xl font-bold text-orange-400 mb-2"
              id="physical-count"
            >
              0
            </div>
            <div class="text-gray-400">Physical Items</div>
          </div>
        </div>

        <!-- Action Buttons -->
        <div class="flex flex-col sm:flex-row gap-6 justify-center">
          <a
            href="/ecommerce/products"
            class="bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white font-bold py-4 px-8 rounded-full transition-all duration-300 transform hover:scale-105 shadow-lg text-center"
          >
            Browse Full Catalog
          </a>
          <a
            href="#featured-products"
            class="border-2 border-white text-white hover:bg-white hover:text-gray-900 font-bold py-4 px-8 rounded-full transition-all duration-300 transform hover:scale-105 text-center"
          >
            View Featured Products
          </a>
        </div>
      </div>
    </section>

    <!-- Featured Products Section -->
    <section id="featured-products" class="py-20 bg-white">
      <div class="container mx-auto px-4">
        <div class="text-center mb-16">
          <h2 class="text-4xl font-bold text-gray-900 mb-6">
            Featured Products
          </h2>
          <p class="text-xl text-gray-600 max-w-3xl mx-auto">
            Discover our hand-picked selection of premium products showcasing
            the platform's capabilities.
          </p>
        </div>

        <!-- Loading State -->
        <div id="featured-loading" class="text-center py-16">
          <div
            class="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"
          >
          </div>
          <p class="text-gray-600">Loading featured products...</p>
        </div>

        <!-- Featured Products Grid -->
        <div id="featured-products-grid" class="hidden">
          <!-- Products will be loaded here by JavaScript -->
        </div>

        <!-- Error State -->
        <div id="featured-error" class="hidden text-center py-16">
          <div class="text-6xl mb-4">🛒</div>
          <h3 class="text-2xl font-bold text-gray-900 mb-4">
            Unable to Load Products
          </h3>
          <p class="text-gray-600 mb-6">
            We're having trouble connecting to our product catalog. This might
            be because the demo backend is not currently running.
          </p>
          <a
            href="/ecommerce/products"
            class="inline-block bg-blue-600 text-white hover:bg-blue-700 font-medium px-6 py-3 rounded-lg transition-colors"
          >
            Try Product Catalog
          </a>
        </div>
      </div>
    </section>

    <!-- Categories Preview -->
    <section class="py-20 bg-gray-50">
      <div class="container mx-auto px-4">
        <div class="text-center mb-16">
          <h2 class="text-4xl font-bold text-gray-900 mb-6">
            Shop by Category
          </h2>
          <p class="text-xl text-gray-600 max-w-3xl mx-auto">
            Organized product categories with intelligent filtering and search
            capabilities.
          </p>
        </div>

        <!-- Categories Loading -->
        <div
          id="categories-loading"
          class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6"
        >
          <!-- Loading skeletons -->
          <div class="animate-pulse">
            <div class="bg-gray-200 rounded-lg h-32 mb-4"></div>
            <div class="bg-gray-200 h-4 rounded mb-2"></div>
            <div class="bg-gray-200 h-3 rounded w-2/3"></div>
          </div>
          <div class="animate-pulse">
            <div class="bg-gray-200 rounded-lg h-32 mb-4"></div>
            <div class="bg-gray-200 h-4 rounded mb-2"></div>
            <div class="bg-gray-200 h-3 rounded w-2/3"></div>
          </div>
          <div class="animate-pulse">
            <div class="bg-gray-200 rounded-lg h-32 mb-4"></div>
            <div class="bg-gray-200 h-4 rounded mb-2"></div>
            <div class="bg-gray-200 h-3 rounded w-2/3"></div>
          </div>
          <div class="animate-pulse">
            <div class="bg-gray-200 rounded-lg h-32 mb-4"></div>
            <div class="bg-gray-200 h-4 rounded mb-2"></div>
            <div class="bg-gray-200 h-3 rounded w-2/3"></div>
          </div>
        </div>

        <!-- Categories Grid -->
        <div id="categories-grid" class="hidden">
          <!-- Categories will be loaded here -->
        </div>
      </div>
    </section>

    <!-- CTA Section -->
    <section
      class="py-20 bg-gradient-to-r from-gray-900 via-blue-900 to-purple-900 text-white"
    >
      <div class="container mx-auto px-4 text-center">
        <h2 class="text-4xl md:text-5xl font-bold mb-6">
          Ready to Build Your Store?
        </h2>
        <p class="text-xl text-blue-100 mb-8 max-w-3xl mx-auto">
          This is just a glimpse of what's possible with our headless ecommerce
          platform. Start building your own custom shopping experience today.
        </p>
        <div class="flex flex-col sm:flex-row gap-4 justify-center">
          <a
            href="/contact"
            class="bg-white text-blue-600 hover:bg-blue-50 font-bold py-4 px-8 rounded-full transition-all duration-300 transform hover:scale-105 shadow-lg"
          >
            Get Started
          </a>
          <a
            href="/ecommerce/products"
            class="border-2 border-white text-white hover:bg-white hover:text-blue-600 font-bold py-4 px-8 rounded-full transition-all duration-300 transform hover:scale-105"
          >
            Explore More
          </a>
        </div>
      </div>
    </section>
  </div>

  <Footer slot="footer" />
</BaseLayout>

<script>
  // Define types
  interface Product {
    slug: string;
    name: string;
    description?: string;
    price: number;
    sale_price?: number;
    main_image?: string;
    featured_image?: string;
    product_type: "digital" | "physical";
    category?: {
      name: string;
      slug: string;
    };
  }

  interface Category {
    slug: string;
    name: string;
    description?: string;
  }

  interface ApiResponse<T> {
    results?: T[];
    count?: number;
  }

  // Animation classes for fade-in effects
  const style: HTMLStyleElement = document.createElement("style");
  style.textContent = `
      @keyframes fadeInUp {
        from {
          opacity: 0;
          transform: translateY(30px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }
      
      .animate-fade-in {
        animation: fadeInUp 0.8s ease-out;
      }
      
      .animate-fade-in-delay {
        animation: fadeInUp 0.8s ease-out 0.2s both;
      }
      
      .animate-fade-in-delay-2 {
        animation: fadeInUp 0.8s ease-out 0.4s both;
      }
    `;
  document.head.appendChild(style);

  // API configuration
  const API_BASE_URL: string = "https://corrison.corrisonapi.com/api/v1";

  // Animated counter function
  function animateCounter(
    element: HTMLElement | null,
    target: number,
    duration: number = 2000,
  ): void {
    if (!element) return;

    const start: number = 0;
    const increment: number = target / (duration / 16);
    let current: number = start;

    const timer: number = window.setInterval(() => {
      current += increment;
      if (current >= target) {
        current = target;
        clearInterval(timer);
      }
      element.textContent = Math.floor(current).toString();
    }, 16);
  }

  // Fetch and display stats
  async function loadStats(): Promise<void> {
    try {
      const [productsResponse, categoriesResponse]: [Response, Response] =
        await Promise.all([
          fetch(`${API_BASE_URL}/products/`),
          fetch(`${API_BASE_URL}/categories/`),
        ]);

      if (productsResponse.ok && categoriesResponse.ok) {
        const products: ApiResponse<Product> = await productsResponse.json();
        const categories: ApiResponse<Category> =
          await categoriesResponse.json();

        const productsArray: Product[] =
          products.results || (products as Product[]);
        const categoriesArray: Category[] =
          categories.results || (categories as Category[]);

        const digitalCount: number = productsArray.filter(
          (p: Product) => p.product_type === "digital",
        ).length;
        const physicalCount: number = productsArray.filter(
          (p: Product) => p.product_type === "physical",
        ).length;

        // Animate counters
        setTimeout(() => {
          animateCounter(
            document.getElementById("products-count"),
            productsArray.length,
          );
          animateCounter(
            document.getElementById("categories-count"),
            categoriesArray.length,
          );
          animateCounter(
            document.getElementById("digital-count"),
            digitalCount,
          );
          animateCounter(
            document.getElementById("physical-count"),
            physicalCount,
          );
        }, 1000);
      }
    } catch (error) {
      console.log("Stats loading failed:", error);
      // Show static demo numbers
      setTimeout(() => {
        animateCounter(document.getElementById("products-count"), 24);
        animateCounter(document.getElementById("categories-count"), 8);
        animateCounter(document.getElementById("digital-count"), 12);
        animateCounter(document.getElementById("physical-count"), 12);
      }, 1000);
    }
  }

  // Load featured products
  async function loadFeaturedProducts(): Promise<void> {
    const loadingEl: HTMLElement | null =
      document.getElementById("featured-loading");
    const gridEl: HTMLElement | null = document.getElementById(
      "featured-products-grid",
    );
    const errorEl: HTMLElement | null =
      document.getElementById("featured-error");

    try {
      const response: Response = await fetch(
        `${API_BASE_URL}/products/?ordering=-created_at&limit=6`,
      );

      if (!response.ok) throw new Error("Failed to fetch");

      const data: ApiResponse<Product> = await response.json();
      const products: Product[] = data.results || (data as Product[]);

      if (products.length === 0) {
        throw new Error("No products found");
      }

      // Create masonry-style grid
      if (gridEl) {
        gridEl.innerHTML = products
          .map((product: Product, index: number) => {
            const isLarge: boolean = index === 0 || index === 3;
            const imageUrl: string =
              product.main_image ||
              product.featured_image ||
              "/api/placeholder/400/300";
            const price: number = product.sale_price || product.price;
            const originalPrice: number | null = product.sale_price
              ? product.price
              : null;

            return `
              <div class="group product-card ${isLarge ? "lg:col-span-2 lg:row-span-2" : ""} 
                          bg-white rounded-2xl overflow-hidden shadow-lg hover:shadow-2xl 
                          transform transition-all duration-300 hover:scale-105 cursor-pointer"
                   data-product-slug="${product.slug}">
                <div class="relative overflow-hidden ${isLarge ? "h-64 lg:h-full" : "h-48"}">
                  <img src="${imageUrl}" 
                       alt="${product.name}" 
                       class="w-full h-full object-cover group-hover:scale-110 transition-transform duration-500"
                       onerror="this.src='/api/placeholder/400/300'">
                  
                  <!-- Product Type Badge -->
                  <div class="absolute top-4 left-4">
                    <span class="px-3 py-1 text-xs font-semibold rounded-full ${
                      product.product_type === "digital"
                        ? "bg-purple-100 text-purple-800"
                        : "bg-blue-100 text-blue-800"
                    }">
                      ${product.product_type === "digital" ? "📱 Digital" : "📦 Physical"}
                    </span>
                  </div>

                  <!-- Sale Badge -->
                  ${
                    originalPrice
                      ? `
                  <div class="absolute top-4 right-4">
                    <span class="px-3 py-1 text-xs font-bold bg-red-500 text-white rounded-full">
                      SALE
                    </span>
                  </div>
                  `
                      : ""
                  }

                  <!-- Hover Overlay -->
                  <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-30 
                              transition-all duration-300 flex items-center justify-center">
                    <div class="transform translate-y-8 group-hover:translate-y-0 
                                opacity-0 group-hover:opacity-100 transition-all duration-300">
                      <button class="bg-white text-gray-900 px-6 py-2 rounded-full font-semibold 
                                     hover:bg-gray-100 transition-colors mr-2">
                        View Details
                      </button>
                      <button class="bg-blue-600 text-white px-6 py-2 rounded-full font-semibold 
                                     hover:bg-blue-700 transition-colors">
                        Add to Cart
                      </button>
                    </div>
                  </div>
                </div>
                
                <div class="p-6">
                  <div class="flex items-start justify-between mb-2">
                    <h3 class="font-bold text-lg text-gray-900 group-hover:text-blue-600 
                               transition-colors line-clamp-2">
                      ${product.name}
                    </h3>
                  </div>
                  
                  <p class="text-gray-600 text-sm mb-4 line-clamp-2">
                    ${product.description || "Premium quality product with excellent features and value."}
                  </p>
                  
                  <div class="flex items-center justify-between">
                    <div class="flex items-center space-x-2">
                      <span class="text-2xl font-bold text-gray-900">
                        ${parseFloat(price.toString()).toFixed(2)}
                      </span>
                      ${
                        originalPrice
                          ? `
                      <span class="text-lg text-gray-500 line-through">
                        ${parseFloat(originalPrice.toString()).toFixed(2)}
                      </span>
                      `
                          : ""
                      }
                    </div>
                    
                    ${
                      product.category
                        ? `
                    <span class="text-xs text-gray-500 bg-gray-100 px-2 py-1 rounded">
                      ${product.category.name}
                    </span>
                    `
                        : ""
                    }
                  </div>
                </div>
              </div>
            `;
          })
          .join("");

        // Setup masonry grid
        gridEl.className =
          "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 auto-rows-fr";

        // Add click handlers
        gridEl.querySelectorAll(".product-card").forEach((card: Element) => {
          card.addEventListener("click", () => {
            const slug: string | null =
              (card as HTMLElement).dataset.productSlug || null;
            if (slug) {
              window.location.href = `/ecommerce/${slug}`;
            }
          });
        });
      }

      // Show grid, hide loading
      loadingEl?.classList.add("hidden");
      gridEl?.classList.remove("hidden");
    } catch (error) {
      console.log("Featured products loading failed:", error);
      loadingEl?.classList.add("hidden");
      errorEl?.classList.remove("hidden");
    }
  }

  // Load categories
  async function loadCategories(): Promise<void> {
    const loadingEl: HTMLElement | null =
      document.getElementById("categories-loading");
    const gridEl: HTMLElement | null =
      document.getElementById("categories-grid");

    try {
      const response: Response = await fetch(`${API_BASE_URL}/categories/`);

      if (!response.ok) throw new Error("Failed to fetch");

      const data: ApiResponse<Category> = await response.json();
      const categories: Category[] = (
        data.results || (data as Category[])
      ).slice(0, 8);

      if (categories.length > 0 && gridEl) {
        gridEl.innerHTML = categories
          .map((category: Category, index: number) => {
            const colors: string[] = [
              "from-blue-500 to-blue-600",
              "from-purple-500 to-purple-600",
              "from-green-500 to-green-600",
              "from-orange-500 to-orange-600",
              "from-teal-500 to-teal-600",
              "from-pink-500 to-pink-600",
              "from-indigo-500 to-indigo-600",
              "from-red-500 to-red-600",
            ];

            return `
              <div class="group cursor-pointer" onclick="window.location.href='/ecommerce/products?category=${category.slug}'">
                <div class="bg-gradient-to-br ${colors[index % colors.length]} 
                           rounded-xl p-8 text-white h-32 flex items-center justify-center 
                           transform transition-all duration-300 hover:scale-105 hover:shadow-xl mb-4">
                  <div class="text-center">
                    <div class="text-3xl mb-2">🏷️</div>
                    <h3 class="font-bold text-lg">${category.name}</h3>
                  </div>
                </div>
                <div class="text-center">
                  <h4 class="font-semibold text-gray-900 mb-1">${category.name}</h4>
                  <p class="text-sm text-gray-600">
                    ${category.description || "Explore our collection"}
                  </p>
                </div>
              </div>
            `;
          })
          .join("");

        gridEl.className =
          "grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6";
      } else if (gridEl) {
        gridEl.innerHTML =
          '<p class="text-center text-gray-600 col-span-full">No categories available</p>';
      }

      loadingEl?.classList.add("hidden");
      gridEl?.classList.remove("hidden");
    } catch (error) {
      console.log("Categories loading failed:", error);
      loadingEl?.classList.add("hidden");

      // Show demo categories
      if (gridEl) {
        gridEl.innerHTML = `
            <div class="text-center col-span-full py-8">
              <p class="text-gray-600 mb-4">Demo categories (backend not connected)</p>
              <div class="grid grid-cols-2 md:grid-cols-4 gap-4 max-w-2xl mx-auto">
                ${["Electronics", "Clothing", "Books", "Home & Garden"]
                  .map(
                    (name: string, i: number) => `
                  <div class="bg-gradient-to-br from-blue-500 to-purple-600 rounded-lg p-4 text-white text-center">
                    <div class="text-2xl mb-2">🏷️</div>
                    <div class="font-semibold">${name}</div>
                  </div>
                `,
                  )
                  .join("")}
              </div>
            </div>
          `;
        gridEl.classList.remove("hidden");
      }
    }
  }

  // Smooth scrolling for anchor links
  document.querySelectorAll('a[href^="#"]').forEach((anchor: Element) => {
    anchor.addEventListener(
      "click",
      function (this: HTMLAnchorElement, e: Event) {
        e.preventDefault();
        const href: string | null = this.getAttribute("href");
        if (href) {
          const target: HTMLElement | null = document.querySelector(href);
          if (target) {
            target.scrollIntoView({
              behavior: "smooth",
              block: "start",
            });
          }
        }
      },
    );
  });

  // Initialize everything when page loads
  document.addEventListener("DOMContentLoaded", () => {
    loadStats();
    loadFeaturedProducts();
    loadCategories();

    // Button click handlers
    document
      .getElementById("explore-products-btn")
      ?.addEventListener("click", () => {
        window.location.href = "/ecommerce/products";
      });

    document
      .getElementById("view-categories-btn")
      ?.addEventListener("click", () => {
        document.getElementById("featured-products")?.scrollIntoView({
          behavior: "smooth",
        });
      });
  });
</script>
