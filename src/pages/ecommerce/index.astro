---
// src/pages/ecommerce/index.astro
import BaseLayout from "../../layouts/BaseLayout.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";

// SERVER-SIDE DATA FETCHING FOR SEO
let products: any[] = [];
let categories: any[] = [];
let featuredProducts: any[] = [];
let statsData = {
  totalProducts: 0,
  totalCategories: 0,
  digitalProducts: 0,
};

try {
  // Fetch products and categories server-side for SEO
  const [productsResponse, categoriesResponse] = await Promise.all([
    fetch("https://corrison.corrisonapi.com/api/v1/products/?product_type=digital"),
    fetch("https://corrison.corrisonapi.com/api/v1/categories/")
  ]);

  if (productsResponse.ok) {
    const productsData = await productsResponse.json();
    products = productsData.results || productsData;
    featuredProducts = products.slice(0, 6); // Get first 6 for featured section
    
    // Calculate stats - digital only
    statsData.totalProducts = productsData.count || products.length;
    statsData.digitalProducts = products.length; // All products are digital
  }

  if (categoriesResponse.ok) {
    const categoriesData = await categoriesResponse.json();
    categories = (categoriesData.results || categoriesData).slice(0, 8); // Limit to 8 for display
    statsData.totalCategories = categoriesData.count || categories.length;
  }
} catch (error) {
  console.warn("Failed to fetch data server-side:", error);
  // Will fall back to client-side loading for interactivity
}

// Helper function for server-side rendering
function getProductImageUrl(product: any): string {
  const imageUrl = product.featured_image || product.main_image;
  if (!imageUrl || imageUrl === "null" || imageUrl === "" || imageUrl === undefined) {
    return "/static/images/placeholder.png";
  }
  return imageUrl;
}

function getCategoryImageUrl(category: any): string {
  const imageUrl = category.image || category.main_image || category.featured_image || category.category_image;
  if (imageUrl && imageUrl !== "null" && imageUrl !== "" && imageUrl !== undefined) {
    return imageUrl;
  }
  return "/static/images/placeholder.png";
}

// SEO meta information
const metaTitle = "Digital Products â€“ Corrison Ecommerce Platform";
const metaDescription = "Discover our digital product marketplace featuring downloadable content, courses, and digital goods with instant delivery.";
---

<script define:vars={{ products, categories, featuredProducts, statsData }}>
  window.preloadedProducts = products;
  window.preloadedCategories = categories;
  window.preloadedFeaturedProducts = featuredProducts;
  window.preloadedStatsData = statsData;
</script>

<BaseLayout>
  <Header slot="header" />
  <title slot="title">{metaTitle}</title>
  <meta slot="head" name="description" content={metaDescription} />
  <meta slot="head" property="og:title" content={metaTitle} />
  <meta slot="head" property="og:description" content={metaDescription} />
  <meta slot="head" property="og:type" content="website" />

  <div class="min-h-screen bg-gradient-to-br from-gray-50 via-purple-50 to-blue-50">
    <!-- Hero Section with Animated Background -->
    <section class="relative overflow-hidden bg-gradient-to-r from-purple-600 via-blue-600 to-indigo-700">
      <!-- Animated Background Elements -->
      <div class="absolute inset-0">
        <div class="absolute top-0 left-0 w-72 h-72 bg-white opacity-10 rounded-full mix-blend-multiply animate-pulse"></div>
        <div class="absolute top-0 right-0 w-96 h-96 bg-purple-300 opacity-10 rounded-full mix-blend-multiply animate-pulse delay-1000"></div>
        <div class="absolute bottom-0 left-1/3 w-80 h-80 bg-blue-300 opacity-10 rounded-full mix-blend-multiply animate-pulse delay-2000"></div>
      </div>

      <div class="relative container mx-auto px-4 py-20">
        <div class="text-center max-w-4xl mx-auto">
          <h1 class="text-5xl md:text-7xl font-bold text-white mb-6 animate-fade-in">
            Digital
            <span class="bg-gradient-to-r from-purple-400 to-blue-400 bg-clip-text text-transparent">
              Marketplace
            </span>
          </h1>
          <p class="text-xl md:text-2xl text-purple-100 mb-8 max-w-3xl mx-auto animate-fade-in-delay">
            Instant downloads, courses, and digital products. Built with modern 
            headless commerce technology for seamless digital delivery.
          </p>
          <div class="flex flex-col sm:flex-row gap-4 justify-center animate-fade-in-delay-2">
            <button
              id="explore-products-btn"
              class="bg-white text-purple-600 hover:bg-purple-50 font-bold py-4 px-8 rounded-full transition-all duration-300 transform hover:scale-105 shadow-lg"
            >
              Explore Digital Products
            </button>
            <button
              id="view-categories-btn"
              class="border-2 border-white text-white hover:bg-white hover:text-purple-600 font-bold py-4 px-8 rounded-full transition-all duration-300 transform hover:scale-105"
            >
              Browse Categories
            </button>
          </div>
        </div>
      </div>

      <!-- Scroll indicator -->
      <div class="absolute bottom-8 left-1/2 transform -translate-x-1/2 animate-bounce">
        <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"></path>
        </svg>
      </div>
    </section>

    <!-- Features Overview Section -->
    <section class="py-20 bg-white">
      <div class="container mx-auto px-4">
        <div class="text-center mb-16">
          <h2 class="text-4xl font-bold text-gray-900 mb-6">Digital-First Platform</h2>
          <p class="text-xl text-gray-600 max-w-3xl mx-auto">
            A modern digital marketplace built for instant delivery and seamless customer experience.
          </p>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          <!-- Digital Download Feature -->
          <div class="group relative bg-gradient-to-br from-purple-500 to-purple-600 rounded-2xl p-8 text-white transform transition-all duration-300 hover:scale-105 hover:shadow-2xl">
            <div class="absolute inset-0 bg-gradient-to-br from-purple-400 to-blue-600 rounded-2xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
            <div class="relative z-10">
              <div class="w-12 h-12 bg-white bg-opacity-20 rounded-lg flex items-center justify-center mb-4">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10"></path>
                </svg>
              </div>
              <h3 class="text-xl font-bold mb-3">Instant Downloads</h3>
              <p class="text-purple-100">
                Secure digital product delivery with download limits, expiry controls, and immediate access after purchase.
              </p>
            </div>
          </div>

          <!-- Smart Cart Feature -->
          <div class="group relative bg-gradient-to-br from-blue-500 to-blue-600 rounded-2xl p-8 text-white transform transition-all duration-300 hover:scale-105 hover:shadow-2xl">
            <div class="absolute inset-0 bg-gradient-to-br from-blue-400 to-purple-600 rounded-2xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
            <div class="relative z-10">
              <div class="w-12 h-12 bg-white bg-opacity-20 rounded-lg flex items-center justify-center mb-4">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 7m0 0l-1.5-5M7 13l-2-8m0 0h16m-7 4v8a2 2 0 01-2 2H9a2 2 0 01-2-2v-8a2 2 0 012-2h2a2 2 0 012 2z"></path>
                </svg>
              </div>
              <h3 class="text-xl font-bold mb-3">Simplified Checkout</h3>
              <p class="text-blue-100">
                Streamlined cart and checkout process optimized for digital products with Stripe integration.
              </p>
            </div>
          </div>

          <!-- API First Feature -->
          <div class="group relative bg-gradient-to-br from-teal-500 to-teal-600 rounded-2xl p-8 text-white transform transition-all duration-300 hover:scale-105 hover:shadow-2xl">
            <div class="absolute inset-0 bg-gradient-to-br from-teal-400 to-blue-600 rounded-2xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
            <div class="relative z-10">
              <div class="w-12 h-12 bg-white bg-opacity-20 rounded-lg flex items-center justify-center mb-4">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                </svg>
              </div>
              <h3 class="text-xl font-bold mb-3">Headless Architecture</h3>
              <p class="text-teal-100">
                REST API-first design for maximum flexibility and easy integration with any frontend.
              </p>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Live Demo Section - SERVER-SIDE RENDERED STATS -->
    <section class="py-20 bg-gray-900 text-white">
      <div class="container mx-auto px-4">
        <div class="text-center mb-16">
          <h2 class="text-4xl font-bold mb-6">Live Digital Marketplace</h2>
          <p class="text-xl text-gray-300 max-w-3xl mx-auto">
            Explore our digital product catalog with real data, powered by Django REST API.
          </p>
        </div>

        <!-- Quick Stats - SERVER-SIDE RENDERED -->
        <div class="grid grid-cols-1 md:grid-cols-3 gap-8 mb-16">
          <div class="text-center">
            <div class="text-4xl font-bold text-purple-400 mb-2" id="products-count">
              {statsData.totalProducts}
            </div>
            <div class="text-gray-400">Digital Products</div>
          </div>
          <div class="text-center">
            <div class="text-4xl font-bold text-blue-400 mb-2" id="categories-count">
              {statsData.totalCategories}
            </div>
            <div class="text-gray-400">Categories</div>
          </div>
          <div class="text-center">
            <div class="text-4xl font-bold text-teal-400 mb-2" id="digital-count">
              {statsData.digitalProducts}
            </div>
            <div class="text-gray-400">Available Downloads</div>
          </div>
        </div>

        <!-- Action Buttons -->
        <div class="flex flex-col sm:flex-row gap-6 justify-center">
          <a
            href="/ecommerce/products"
            class="bg-gradient-to-r from-purple-500 to-blue-600 hover:from-purple-600 hover:to-blue-700 text-white font-bold py-4 px-8 rounded-full transition-all duration-300 transform hover:scale-105 shadow-lg text-center"
          >
            Browse Digital Catalog
          </a>
          <a
            href="#featured-products"
            class="border-2 border-white text-white hover:bg-white hover:text-gray-900 font-bold py-4 px-8 rounded-full transition-all duration-300 transform hover:scale-105 text-center"
          >
            View Featured Products
          </a>
        </div>
      </div>
    </section>

    <!-- Featured Products Section - SERVER-SIDE RENDERED -->
    <section id="featured-products" class="py-20 bg-white">
      <div class="container mx-auto px-4">
        <div class="text-center mb-16">
          <h2 class="text-4xl font-bold text-gray-900 mb-6">Featured Digital Products</h2>
          <p class="text-xl text-gray-600 max-w-3xl mx-auto">
            Discover our hand-picked selection of premium digital downloads and courses.
          </p>
        </div>

        <!-- Featured Products Grid - MASONRY STYLE WITH LARGE/SMALL CARDS -->
        {featuredProducts.length > 0 ? (
          <div id="featured-products-grid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 auto-rows-fr">
            {featuredProducts.map((product: any, index: number) => {
              const isLarge = index === 0 || index === 3;
              const imageUrl = getProductImageUrl(product);
              const price = product.sale_price || product.price;
              const originalPrice = product.sale_price ? product.price : null;

              return (
                <div 
                  class={`group product-card ${isLarge ? "lg:col-span-2 lg:row-span-2" : ""} 
                          bg-white rounded-2xl overflow-hidden shadow-lg hover:shadow-2xl 
                          transform transition-all duration-300 hover:scale-105 cursor-pointer`}
                  data-product-slug={product.slug}
                >
                  <!-- FEATURED IMAGE CONTAINER -->
                  <div class={`relative ${isLarge ? "h-64 lg:h-full" : "h-48"}`}>
                    <img 
                      src={imageUrl}
                      alt={product.name}
                      class="w-full h-full object-cover group-hover:scale-110 transition-transform duration-500"
                      loading="lazy"
                    />
                    
                    <!-- Digital Product Badge -->
                    <div class="absolute top-4 left-4">
                      <span class="px-3 py-1 text-xs font-semibold rounded-full bg-purple-100 text-purple-800">
                        Digital Download
                      </span>
                    </div>

                    <!-- Sale Badge -->
                    {originalPrice && (
                      <div class="absolute top-4 right-4">
                        <span class="px-3 py-1 text-xs font-bold bg-red-500 text-white rounded-full">
                          SALE
                        </span>
                      </div>
                    )}

                    <!-- Hover Overlay with Animation -->
                    <div class="absolute inset-0 bg-transparent group-hover:bg-black group-hover:bg-opacity-30 
                                transition-all duration-300 flex items-center justify-center pointer-events-none group-hover:pointer-events-auto">
                      <div class="transform translate-y-8 group-hover:translate-y-0 
                                  opacity-0 group-hover:opacity-100 transition-all duration-300 pointer-events-auto">
                        <button class="bg-white text-gray-900 px-6 py-2 rounded-full font-semibold 
                                       hover:bg-gray-100 transition-colors mr-2">
                          View Details
                        </button>
                        <button class="bg-purple-600 text-white px-6 py-2 rounded-full font-semibold 
                                       hover:bg-purple-700 transition-colors">
                          Add to Cart
                        </button>
                      </div>
                    </div>
                  </div>
                  
                  <div class="p-6">
                    <div class="flex items-start justify-between mb-2">
                      <h3 class="font-bold text-lg text-gray-900 group-hover:text-purple-600 
                                 transition-colors line-clamp-2">
                        {product.name}
                      </h3>
                    </div>
                    
                    {product.description ? (
                      <div set:html={product.description} class="text-gray-600 text-sm mb-4 line-clamp-2" />
                    ) : (
                      <p class="text-gray-600 text-sm mb-4 line-clamp-2">
                        Premium digital content with instant download access.
                      </p>
                    )}
                    
                    <div class="flex items-center justify-between">
                      <div class="flex items-center space-x-2">
                        <span class="text-2xl font-bold text-gray-900">
                          ${parseFloat(price.toString()).toFixed(2)}
                        </span>
                        {originalPrice && (
                          <span class="text-lg text-gray-500 line-through">
                            ${parseFloat(originalPrice.toString()).toFixed(2)}
                          </span>
                        )}
                      </div>
                      
                      {product.category && (
                        <span class="text-xs text-gray-500 bg-gray-100 px-2 py-1 rounded">
                          {typeof product.category === "object" ? product.category.name : product.category}
                        </span>
                      )}
                    </div>
                  </div>
                </div>
              );
            })}
          </div>
        ) : (
          <!-- Loading State -->
          <div id="featured-loading" class="text-center py-16">
            <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-purple-600 mx-auto mb-4"></div>
            <p class="text-gray-600">Loading digital products...</p>
          </div>
        )}

        <!-- Error State -->
        <div id="featured-error" class="hidden text-center py-16">
          <div class="text-6xl mb-4">ðŸ”„</div>
          <h3 class="text-2xl font-bold text-gray-900 mb-4">Unable to Load Products</h3>
          <p class="text-gray-600 mb-6">
            We're having trouble connecting to our product catalog. The demo backend may not be running.
          </p>
          <a
            href="/ecommerce/products"
            class="inline-block bg-purple-600 text-white hover:bg-purple-700 font-medium px-6 py-3 rounded-lg transition-colors"
          >
            Try Product Catalog
          </a>
        </div>
      </div>
    </section>

    <!-- Categories Preview -->
    <section class="py-20 bg-gray-50">
      <div class="container mx-auto px-4">
        <div class="text-center mb-16">
          <h2 class="text-4xl font-bold text-gray-900 mb-6">Shop by Category</h2>
          <p class="text-xl text-gray-600 max-w-3xl mx-auto">
            Organized digital product categories for easy browsing and discovery.
          </p>
        </div>

        <!-- Categories Grid -->
        {categories.length > 0 ? (
          <div id="categories-grid" class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
            {categories.map((category: any) => {
              const imageUrl = getCategoryImageUrl(category);

              return (
                <a 
                  href={`/ecommerce/products?category=${category.slug}`}
                  class="group cursor-pointer block"
                >
                  <div class="relative rounded-xl overflow-hidden h-32 mb-4 transform transition-all duration-300 hover:scale-105 hover:shadow-xl">
                    <img 
                      src={imageUrl}
                      alt={category.name}
                      class="w-full h-full object-cover group-hover:scale-110 transition-transform duration-500"
                      loading="lazy"
                    />
                  
                    <!-- Overlay -->
                    <div class="absolute inset-0 bg-black bg-opacity-40 group-hover:bg-opacity-60 transition-all duration-300 flex items-center justify-center">
                      <h3 class="font-bold text-lg text-white text-center px-4">{category.name}</h3>
                    </div>
                  </div>
                  <div class="text-center">
                    <h4 class="font-semibold text-gray-900 mb-1">{category.name}</h4>
                    <p class="text-sm text-gray-600">
                      {category.description || "Explore digital products"}
                    </p>
                  </div>
                </a>
              );
            })}
          </div>
        ) : (
          <!-- Categories Loading -->
          <div id="categories-loading" class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
            {Array.from({length: 4}).map((_, index) => (
              <div class="animate-pulse">
                <div class="bg-gray-200 rounded-lg h-32 mb-4"></div>
                <div class="bg-gray-200 h-4 rounded mb-2"></div>
                <div class="bg-gray-200 h-3 rounded w-2/3"></div>
              </div>
            ))}
          </div>
        )}
      </div>
    </section>

    <!-- CTA Section -->
    <section class="py-20 bg-gradient-to-r from-gray-900 via-purple-900 to-blue-900 text-white">
      <div class="container mx-auto px-4 text-center">
        <h2 class="text-4xl md:text-5xl font-bold mb-6">Ready for Digital Commerce?</h2>
        <p class="text-xl text-purple-100 mb-8 max-w-3xl mx-auto">
          Experience the future of digital product delivery with our headless commerce platform.
        </p>
        <div class="flex flex-col sm:flex-row gap-4 justify-center">
          <a
            href="/contact"
            class="bg-white text-purple-600 hover:bg-purple-50 font-bold py-4 px-8 rounded-full transition-all duration-300 transform hover:scale-105 shadow-lg"
          >
            Get Started
          </a>
          <a
            href="/ecommerce/products"
            class="border-2 border-white text-white hover:bg-white hover:text-purple-600 font-bold py-4 px-8 rounded-full transition-all duration-300 transform hover:scale-105"
          >
            Explore Products
          </a>
        </div>
      </div>
    </section>
  </div>

  <Footer slot="footer" />
</BaseLayout>

<script>
  // SIMPLIFIED JAVASCRIPT FOR DIGITAL-ONLY MARKETPLACE

  // Animation classes
  const style: HTMLStyleElement = document.createElement("style");
  style.textContent = `
    @keyframes fadeInUp {
      from { transform: translateY(30px); opacity: 0; }
      to { transform: translateY(0); opacity: 1; }
    }
    
    .animate-fade-in { animation: fadeInUp 0.8s ease-out; }
    .animate-fade-in-delay { animation: fadeInUp 0.8s ease-out 0.2s both; }
    .animate-fade-in-delay-2 { animation: fadeInUp 0.8s ease-out 0.4s both; }
  `;
  document.head.appendChild(style);

  const API_BASE_URL: string = "https://corrison.corrisonapi.com/api/v1";

  // Animated counter function
  function animateCounter(element: HTMLElement | null, target: number, duration: number = 2000): void {
    if (!element) return;

    const start: number = 0;
    const increment: number = target / (duration / 16);
    let current: number = start;

    const timer: number = window.setInterval(() => {
      current += increment;
      if (current >= target) {
        current = target;
        clearInterval(timer);
      }
      element.textContent = Math.floor(current).toString();
    }, 16);
  }

  // Load and animate stats
  async function loadStats(): Promise<void> {
    try {
      const preloadedStats = (window as any).preloadedStatsData;
      
      if (preloadedStats && preloadedStats.totalProducts > 0) {
        setTimeout(() => {
          animateCounter(document.getElementById("products-count"), preloadedStats.totalProducts);
          animateCounter(document.getElementById("categories-count"), preloadedStats.totalCategories);
          animateCounter(document.getElementById("digital-count"), preloadedStats.digitalProducts);
        }, 1000);
        return;
      }

      // Fallback: fetch digital products only
      const response: Response = await fetch(`${API_BASE_URL}/products/?product_type=digital`);
      const categoriesResponse: Response = await fetch(`${API_BASE_URL}/categories/`);

      if (response.ok && categoriesResponse.ok) {
        const productsData = await response.json();
        const categoriesData = await categoriesResponse.json();

        const productsArray = productsData.results || productsData;
        const categoriesArray = categoriesData.results || categoriesData;

        setTimeout(() => {
          animateCounter(document.getElementById("products-count"), productsArray.length);
          animateCounter(document.getElementById("categories-count"), categoriesArray.length);
          animateCounter(document.getElementById("digital-count"), productsArray.length);
        }, 1000);
      }
    } catch (error) {
      console.log("Stats loading failed:", error);
      // Show demo numbers
      setTimeout(() => {
        animateCounter(document.getElementById("products-count"), 12);
        animateCounter(document.getElementById("categories-count"), 6);
        animateCounter(document.getElementById("digital-count"), 12);
      }, 1000);
    }
  }

  // Load featured products
  async function loadFeaturedProducts(): Promise<void> {
    const loadingEl: HTMLElement | null = document.getElementById("featured-loading");
    const errorEl: HTMLElement | null = document.getElementById("featured-error");

    try {
      const preloadedFeaturedProducts = (window as any).preloadedFeaturedProducts || [];
      
      if (preloadedFeaturedProducts.length > 0) {
        // Products are already rendered server-side
        if (loadingEl) loadingEl.classList.add("hidden");
        return;
      }

      // Fallback: client-side loading
      const allProducts = (window as any).preloadedProducts || [];
      const featuredProducts = allProducts.slice(0, 6);

      if (featuredProducts.length === 0) {
        throw new Error("No products found");
      }

      if (loadingEl) loadingEl.classList.add("hidden");
    } catch (error) {
      console.log("Featured products loading failed:", error);
      if (loadingEl) loadingEl.classList.add("hidden");
      if (errorEl) errorEl.classList.remove("hidden");
    }
  }

  // Initialize everything
  document.addEventListener("DOMContentLoaded", () => {
    loadStats();
    loadFeaturedProducts();

    // Button click handlers
    document.getElementById("explore-products-btn")?.addEventListener("click", () => {
      window.location.href = "/ecommerce/products";
    });

    document.getElementById("view-categories-btn")?.addEventListener("click", () => {
      document.getElementById("featured-products")?.scrollIntoView({
        behavior: "smooth",
      });
    });

    // Product card click handlers
    document.querySelectorAll('.product-card').forEach((card: Element) => {
      card.addEventListener('click', () => {
        const slug: string | null = (card as HTMLElement).dataset.productSlug || null;
        if (slug) {
          window.location.href = `/ecommerce/${slug}`;
        }
      });
    });

    // Category click handlers  
    document.querySelectorAll('#categories-grid a').forEach((categoryLink: Element) => {
      // Categories are now proper <a> tags, so they'll navigate automatically
      // No need for click handlers
    });

    // Smooth scrolling for anchor links
    document.querySelectorAll('a[href^="#"]').forEach((anchor: Element) => {
      anchor.addEventListener("click", function(this: HTMLAnchorElement, e: Event) {
        e.preventDefault();
        const href: string | null = this.getAttribute("href");
        if (href) {
          const target: HTMLElement | null = document.querySelector(href);
          if (target) {
            target.scrollIntoView({ behavior: "smooth", block: "start" });
          }
        }
      });
    });
  });
</script>