---
// src/pages/ecommerce/[slug].astro
import BaseLayout from "../../layouts/BaseLayout.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";

// Complete Product interface that matches Django model exactly
interface ProductData {
  // Required fields (no null/undefined in Django model)
  id: number; // CRITICAL: Required by cart API
  name: string;
  slug: string;
  price: number;
  product_type: "physical" | "digital";
  in_stock: boolean;
  stock_qty: number; // PositiveIntegerField, defaults to 0
  is_active: boolean; // Required by cart system

  // Optional fields (null=True, blank=True in Django)
  description?: string;
  sale_price?: number;
  main_image?: string;
  featured_image?: string;
  weight?: number;
  dimensions?: string;
  digital_file?: string;
  download_limit?: number;
  download_expiry_days?: number;
  is_featured?: boolean;
  requires_shipping?: boolean;

  // Relationships - category is ForeignKey (required) but API might not include it
  category?: {
    name: string;
    slug: string;
  };
  // images is ProductImage relationship
  images?: Array<{ image: string }>;
}

export async function getStaticPaths() {
  try {
    // Fetch products from your Django API
    const response = await fetch(
      "https://corrison.corrisonapi.com/api/v1/products/",
    );

    if (!response.ok) {
      console.warn("Failed to fetch products for static paths, using fallback");
      return [];
    }

    const data = await response.json();
    const products = data.results || data;

    // Generate paths for each product with FULL product data
    return products.map((product: ProductData) => ({
      params: { slug: product.slug },
      props: { product }, // Pass complete product data as props
    }));
  } catch (error) {
    console.warn("Error fetching products for static paths:", error);
    return [];
  }
}

// Type the props properly
interface Props {
  product: ProductData;
}

const { slug } = Astro.params;
const { product }: Props = Astro.props;

// Handle case where product might be undefined
if (!product) {
  return Astro.redirect("/404");
}

// Helper functions for server-side rendering
function getProductImageUrl(product: ProductData): string {
  const imageUrl = product.featured_image || product.main_image;
  if (
    !imageUrl ||
    imageUrl === "null" ||
    imageUrl === "" ||
    imageUrl === undefined
  ) {
    return "/static/images/placeholder.png";
  }
  return imageUrl;
}

function getProductImages(product: ProductData): string[] {
  const images = [];
  if (product.main_image) images.push(product.main_image);
  if (product.images && Array.isArray(product.images)) {
    images.push(
      ...product.images.map((img: any) =>
        typeof img === "object" ? img.image : img,
      ),
    );
  }
  return images.length > 0 ? images : ["/static/images/placeholder.png"];
}

// Pre-calculate ALL values for server-side rendering - NO CONDITIONALS IN TEMPLATE
// Using your exact Django field names
const currentPrice = product.sale_price || product.price;
const originalPrice = product.sale_price ? product.price : null;
const mainImageUrl = getProductImageUrl(product);
const productImages = getProductImages(product);
const isDigital = product.product_type === "digital";
const categoryName =
  typeof product.category === "object"
    ? product.category?.name
    : product.category || "";
const categorySlug =
  typeof product.category === "object" ? product.category?.slug : "";

// SEO meta tags
const metaTitle = `${product.name} â€“ Corrison Ecommerce`;
const metaDescription = product.description
  ? `${product.description.slice(0, 150)}...`
  : `${product.name} - Premium quality product with excellent features and value.`;
---

<BaseLayout>
  <Header slot="header" />
  <title slot="title">{metaTitle}</title>
  <meta slot="head" name="description" content={metaDescription} />
  <meta slot="head" property="og:title" content={metaTitle} />
  <meta slot="head" property="og:description" content={metaDescription} />
  <meta slot="head" property="og:image" content={mainImageUrl} />
  <meta slot="head" property="og:type" content="product" />
  <meta
    slot="head"
    property="product:price:amount"
    content={currentPrice.toString()}
  />
  <meta slot="head" property="product:price:currency" content="USD" />

  <div class="min-h-screen bg-gray-50">
    <!-- Product Content - NOW VISIBLE IMMEDIATELY -->
    <div id="product-content">
      <!-- Breadcrumb -->
      <nav class="bg-white border-b border-gray-200">
        <div class="container mx-auto px-4 py-4">
          <ol class="flex items-center space-x-2 text-sm">
            <li>
              <a href="/" class="text-gray-500 hover:text-gray-700">Home</a>
            </li>
            <li><span class="text-gray-300">/</span></li>
            <li>
              <a href="/ecommerce" class="text-gray-500 hover:text-gray-700"
                >Shop</a
              >
            </li>
            <li><span class="text-gray-300">/</span></li>
            <li>
              <a
                href="/ecommerce/products"
                class="text-gray-500 hover:text-gray-700">Products</a
              >
            </li>
            <li><span class="text-gray-300">/</span></li>
            <li class="text-gray-900 font-medium">{product.name}</li>
          </ol>
        </div>
      </nav>

      <div class="container mx-auto px-4 py-12">
        <div class="max-w-6xl mx-auto">
          <div class="lg:grid lg:grid-cols-2 gap-12 space-y-8 lg:space-y-0">
            <!-- Product Images -->
            <div class="space-y-4">
              <!-- Main Image -->
              <div
                class="relative bg-white rounded-xl overflow-hidden shadow-lg"
              >
                <img
                  id="main-image"
                  src={mainImageUrl}
                  alt={product.name}
                  class="w-full h-96 object-cover"
                  style="opacity:1;"
                />

                <!-- Product Type Badge -->
                <div class="absolute top-4 left-4">
                  <span
                    class="px-3 py-1 text-sm font-semibold rounded-full bg-blue-100 text-blue-800"
                    id="product-type-badge"
                  >
                    Physical Product
                  </span>
                </div>

                <!-- Sale Badge -->
                <div class="absolute top-4 right-4 hidden" id="sale-badge">
                  <span
                    class="px-3 py-1 text-sm font-bold bg-red-500 text-white rounded-full"
                  >
                    SALE
                  </span>
                </div>

                <!-- Image Navigation -->
                <div
                  id="image-nav"
                  class="absolute inset-y-0 left-0 right-0 flex items-center justify-between p-4 opacity-0 hover:opacity-100 transition-opacity"
                >
                  <button
                    id="prev-image"
                    class="bg-black bg-opacity-50 text-white p-2 rounded-full hover:bg-opacity-75 transition-all"
                  >
                    <svg
                      class="w-6 h-6"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M15 19l-7-7 7-7"></path>
                    </svg>
                  </button>
                  <button
                    id="next-image"
                    class="bg-black bg-opacity-50 text-white p-2 rounded-full hover:bg-opacity-75 transition-all"
                  >
                    <svg
                      class="w-6 h-6"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M9 5l7 7-7 7"></path>
                    </svg>
                  </button>
                </div>
              </div>

              <!-- Thumbnail Images -->
              <div id="thumbnail-container" class="grid grid-cols-4 gap-2">
                <!-- Thumbnails will be populated by JS -->
              </div>

              <!-- Product Gallery Modal Trigger -->
              <button
                id="gallery-trigger"
                class="w-full bg-gray-100 hover:bg-gray-200 text-gray-700 py-3 px-4 rounded-lg transition-colors font-medium"
              >
                <svg
                  class="w-5 h-5 inline mr-2"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"
                  ></path>
                </svg>
                View Gallery
              </button>
            </div>

            <!-- Product Info -->
            <div class="space-y-6">
              <!-- Product Title & Category -->
              <div>
                <div id="category-tag" class="mb-2 hidden">
                  <span
                    class="inline-block bg-gray-100 text-gray-600 px-3 py-1 rounded-full text-sm font-medium"
                  >
                    Category
                  </span>
                </div>
                <h1 class="text-3xl lg:text-4xl font-bold text-gray-900 mb-4">
                  {product.name}
                </h1>
              </div>

              <!-- Price -->
              <div class="flex items-center space-x-4">
                <div>
                  <span class="text-4xl font-bold text-gray-900">
                    ${parseFloat(currentPrice.toString()).toFixed(2)}
                  </span>
                  <span
                    id="original-price"
                    class="text-2xl text-gray-500 line-through ml-3 hidden"
                  >
                    $0.00
                  </span>
                </div>
                <div id="savings-badge" class="hidden">
                  <span
                    class="bg-red-100 text-red-800 px-3 py-1 rounded-full text-sm font-semibold"
                  >
                    Save <span id="savings-amount">$0</span>
                  </span>
                </div>
              </div>

              <!-- Product Description -->
              <div class="prose prose-gray max-w-none">
                {
                  product.description ? (
                    <div
                      set:html={product.description}
                      class="text-lg text-gray-600 leading-relaxed"
                    />
                  ) : (
                    <p class="text-lg text-gray-600 leading-relaxed">
                      Premium quality product with excellent features and value.
                    </p>
                  )
                }
              </div>

              <!-- Cart Type Warning (Hidden by default) -->
              <div
                id="cart-type-warning"
                class="hidden mb-4 p-4 bg-yellow-50 border border-yellow-200 rounded-lg"
              >
                <div class="flex items-start">
                  <svg
                    class="w-5 h-5 text-yellow-600 mt-0.5 mr-3"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z"
                    ></path>
                  </svg>
                  <div>
                    <h4 class="text-sm font-semibold text-yellow-800 mb-1">
                      Cart Type Mismatch
                    </h4>
                    <p
                      class="text-sm text-yellow-700"
                      id="cart-warning-message"
                    >
                      <!-- Warning message will be populated by JavaScript -->
                    </p>
                    <div class="mt-3 flex space-x-2">
                      <button
                        id="clear-cart-and-add"
                        class="text-xs bg-yellow-600 text-white hover:bg-yellow-700 px-3 py-1 rounded transition-colors"
                      >
                        Clear Cart & Add This Item
                      </button>
                      <a
                        href="/cart"
                        class="text-xs bg-gray-600 text-white hover:bg-gray-700 px-3 py-1 rounded transition-colors"
                      >
                        View Current Cart
                      </a>
                    </div>
                  </div>
                </div>
              </div>

              <!-- Digital Product Info -->
              <div
                id="digital-info"
                class="bg-purple-50 border border-purple-200 rounded-lg p-4 hidden"
              >
                <div class="flex items-start">
                  <svg
                    class="w-6 h-6 text-purple-600 mt-1 mr-3"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10"
                    ></path>
                  </svg>
                  <div>
                    <h4 class="font-semibold text-purple-900 mb-1">
                      Digital Download
                    </h4>
                    <p class="text-purple-700 text-sm">
                      Instant access after purchase. Download links valid for
                      <span id="download-days">30</span> days. Maximum <span
                        id="download-limit">5</span
                      > downloads allowed.
                    </p>
                  </div>
                </div>
              </div>

              <!-- Physical Product Info -->
              <div
                id="physical-info"
                class="bg-blue-50 border border-blue-200 rounded-lg p-4"
              >
                <div class="flex items-start">
                  <svg
                    class="w-6 h-6 text-blue-600 mt-1 mr-3"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"
                    ></path>
                  </svg>
                  <div>
                    <h4 class="font-semibold text-blue-900 mb-1">
                      Physical Product
                    </h4>
                    <p class="text-blue-700 text-sm">
                      Ships within 1-2 business days. Free shipping on orders
                      over $50.
                    </p>
                    <div id="product-specs" class="mt-2 text-xs text-blue-600">
                      <!-- Product specs will be populated by JS -->
                    </div>
                  </div>
                </div>
              </div>

              <!-- Stock Status -->
              <div id="stock-status" class="flex items-center space-x-2">
                <div class="w-3 h-3 rounded-full bg-green-500"></div>
                <span class="text-sm font-medium text-green-600">
                  In Stock
                </span>
              </div>

              <!-- Quantity & Add to Cart -->
              <div class="space-y-4">
                <div class="flex items-center space-x-4">
                  <label class="text-sm font-medium text-gray-700"
                    >Quantity:</label
                  >
                  <div
                    class="flex items-center border border-gray-300 rounded-lg"
                  >
                    <button
                      id="decrease-qty"
                      class="px-3 py-2 text-gray-600 hover:text-gray-800 hover:bg-gray-100 transition-colors"
                    >
                      <svg
                        class="w-4 h-4"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M20 12H4"></path>
                      </svg>
                    </button>
                    <input
                      type="number"
                      id="quantity-input"
                      value="1"
                      min="1"
                      max="10"
                      class="w-16 px-3 py-2 text-center border-0 focus:ring-0"
                    />
                    <button
                      id="increase-qty"
                      class="px-3 py-2 text-gray-600 hover:text-gray-800 hover:bg-gray-100 transition-colors"
                    >
                      <svg
                        class="w-4 h-4"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                      </svg>
                    </button>
                  </div>
                </div>

                <!-- Action Buttons -->
                <div class="space-y-3">
                  <button
                    id="add-to-cart-btn"
                    class="w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-4 px-6 rounded-xl transition-all duration-300 transform hover:scale-105 shadow-lg"
                  >
                    <svg
                      class="w-5 h-5 inline mr-2"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 7m0 0l-1.5-5M7 13l-2-8m0 0h16m-7 4v8a2 2 0 01-2 2H9a2 2 0 01-2-2v-8a2 2 0 012-2h2a2 2 0 012 2z"
                      ></path>
                    </svg>
                    Add to Cart
                  </button>

                  <div class="grid grid-cols-2 gap-3">
                    <button
                      id="wishlist-btn"
                      class="flex items-center justify-center px-4 py-3 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 transition-colors"
                    >
                      <svg
                        class="w-5 h-5 mr-2"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"
                        ></path>
                      </svg>
                      Wishlist
                    </button>

                    <button
                      id="share-btn"
                      class="flex items-center justify-center px-4 py-3 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 transition-colors"
                    >
                      <svg
                        class="w-5 h-5 mr-2"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"
                        ></path>
                      </svg>
                      Share
                    </button>
                  </div>
                </div>
              </div>

              <!-- Trust Signals -->
              <div class="border-t pt-6">
                <div
                  class="grid grid-cols-1 sm:grid-cols-3 gap-4 text-sm text-gray-600"
                >
                  <div class="flex items-center">
                    <svg
                      class="w-5 h-5 text-green-500 mr-2"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"
                      ></path>
                    </svg>
                    Secure Payment
                  </div>
                  <div class="flex items-center">
                    <svg
                      class="w-5 h-5 text-blue-500 mr-2"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6"></path>
                    </svg>
                    Easy Returns
                  </div>
                  <div class="flex items-center">
                    <svg
                      class="w-5 h-5 text-purple-500 mr-2"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M18.364 5.636l-3.536 3.536m0 5.656l3.536 3.536M9.172 9.172L5.636 5.636m3.536 9.192L5.636 18.364M12 12h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                      ></path>
                    </svg>
                    24/7 Support
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- Related Products -->
          <section id="related-products" class="mt-20">
            <h2 class="text-2xl font-bold text-gray-900 mb-8">
              Related Products
            </h2>
            <div
              id="related-products-grid"
              class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6"
            >
              <!-- Related products will be loaded here -->
            </div>
          </section>
        </div>
      </div>
    </div>

    <!-- Error State -->
    <div id="error-state" class="hidden container mx-auto px-4 py-16">
      <div class="max-w-lg mx-auto text-center">
        <div class="text-6xl mb-4">ðŸ˜ž</div>
        <h1 class="text-3xl font-bold text-gray-900 mb-4">Product Not Found</h1>
        <p class="text-gray-600 mb-8">
          The product you're looking for doesn't exist or may have been removed.
        </p>
        <div class="space-x-4">
          <a
            href="/ecommerce/products"
            class="inline-block bg-blue-600 text-white hover:bg-blue-700 font-medium px-6 py-3 rounded-lg transition-colors"
          >
            Browse Products
          </a>
          <a
            href="/ecommerce"
            class="inline-block border border-gray-300 text-gray-700 hover:bg-gray-50 font-medium px-6 py-3 rounded-lg transition-colors"
          >
            Back to Shop
          </a>
        </div>
      </div>
    </div>
  </div>

  <Footer slot="footer" />

  <script is:inline>
    (function () {
      var API_BASE = "https://corrison.corrisonapi.com/api/v1";

      function getToken() {
        try {
          return localStorage.getItem("cart_token");
        } catch (e) {
          return null;
        }
      }

      function setToken(token) {
        try {
          if (token) localStorage.setItem("cart_token", token);
        } catch (e) {}
      }

      function makeHeaders() {
        var h = { "Content-Type": "application/json" };
        var t = getToken();
        if (t) h.Authorization = "Bearer " + t;
        return h;
      }

      function showMsg(text, good) {
        var d = document.createElement("div");
        d.style.position = "fixed";
        d.style.top = "16px";
        d.style.right = "16px";
        d.style.padding = "16px";
        d.style.borderRadius = "8px";
        d.style.color = "white";
        d.style.zIndex = "9999";
        d.style.backgroundColor = good ? "#10b981" : "#ef4444";
        d.textContent = text;
        document.body.appendChild(d);
        setTimeout(function () {
          if (d.parentNode) d.parentNode.removeChild(d);
        }, 3000);
      }

      function addToCart(product, qty) {
        var q = parseInt(qty) || 1;
        var pid = parseInt(product.id);

        if (!pid) {
          showMsg("Invalid product", false);
          return;
        }

        fetch(API_BASE + "/items/", {
          method: "POST",
          headers: makeHeaders(),
          body: JSON.stringify({ product: pid, quantity: q }),
        })
          .then(function (r) {
            if (r.ok) {
              return r.json();
            }
            throw new Error("Failed");
          })
          .then(function (data) {
            if (data.cart_token) setToken(data.cart_token);
            showMsg("Added to cart!", true);

            var btn = document.getElementById("add-to-cart-btn");
            if (btn) {
              btn.textContent = "Added!";
              btn.style.backgroundColor = "#10b981";
              setTimeout(function () {
                btn.textContent = "Add to Cart";
                btn.disabled = false;
                btn.style.backgroundColor = "";
              }, 2000);
            }
          })
          .catch(function () {
            showMsg("Failed to add", false);
            var btn = document.getElementById("add-to-cart-btn");
            if (btn) {
              btn.textContent = "Add to Cart";
              btn.disabled = false;
            }
          });
      }

      function loadCart() {
        fetch(API_BASE + "/cart/", { headers: makeHeaders() })
          .then(function (r) {
            if (r.ok) return r.json();
            return null;
          })
          .then(function (cart) {
            console.log("Cart response:", cart);

            var loading = document.getElementById("cart-loading");
            var empty = document.getElementById("empty-cart");
            var content = document.getElementById("cart-content");
            var checkoutLoading = document.getElementById("checkout-loading");
            var emptyCheckout = document.getElementById("empty-cart-redirect");
            var checkoutContent = document.getElementById("checkout-content");

            // Hide loading states
            if (loading) loading.style.display = "none";
            if (checkoutLoading) checkoutLoading.style.display = "none";

            // Check if cart is empty - FIXED LOGIC
            if (!cart || cart.total_items === 0 || cart.total_items === "0") {
              console.log("Cart is empty, showing empty state");
              if (empty) empty.style.display = "block";
              if (content) content.style.display = "none";
              if (emptyCheckout) emptyCheckout.style.display = "block";
              if (checkoutContent) checkoutContent.style.display = "none";
            } else {
              console.log("Cart has items, showing cart content");
              if (empty) empty.style.display = "none";
              if (content) content.style.display = "block";
              if (emptyCheckout) emptyCheckout.style.display = "none";
              if (checkoutContent) checkoutContent.style.display = "block";

              var count = document.getElementById("cart-item-count");
              var subtotal = document.getElementById("cart-subtotal");
              var total = document.getElementById("cart-total");

              if (count) count.textContent = cart.total_items;
              if (subtotal && cart.subtotal)
                subtotal.textContent =
                  "$" + parseFloat(cart.subtotal).toFixed(2);
              if (total && cart.subtotal)
                total.textContent = "$" + parseFloat(cart.subtotal).toFixed(2);
            }
          })
          .catch(function (error) {
            console.log("Cart load error:", error);
            var loading = document.getElementById("cart-loading");
            var checkoutLoading = document.getElementById("checkout-loading");
            var empty = document.getElementById("empty-cart");
            var emptyCheckout = document.getElementById("empty-cart-redirect");

            if (loading) loading.style.display = "none";
            if (checkoutLoading) checkoutLoading.style.display = "none";
            if (empty) empty.style.display = "block";
            if (emptyCheckout) emptyCheckout.style.display = "block";
          });
      }

      function init() {
        console.log("Initializing cart script");

        var addBtn = document.getElementById("add-to-cart-btn");
        if (addBtn && window.preloadedProduct) {
          addBtn.addEventListener("click", function (e) {
            e.preventDefault();
            var qtyInput = document.getElementById("quantity-input");
            var qty = qtyInput ? parseInt(qtyInput.value) || 1 : 1;
            addBtn.disabled = true;
            addBtn.textContent = "Adding...";
            addToCart(window.preloadedProduct, qty);
          });
        }

        if (
          document.getElementById("cart-content") ||
          document.getElementById("checkout-content")
        ) {
          console.log("Loading cart data");
          loadCart();
        }
      }

      if (document.readyState === "loading") {
        document.addEventListener("DOMContentLoaded", init);
      } else {
        init();
      }
    })();
  </script>
</BaseLayout>
