---
// src/pages/blog/index.astro
import BaseLayout from "../../layouts/BaseLayout.astro";
import { fetchPosts } from "../../lib/api";
import type { BlogPost } from "../../types";

// Fetch all blog posts from Django API
const allPosts = await fetchPosts();

// Separate featured posts from regular posts
const featuredPosts = allPosts.filter((post) => post.is_featured).slice(0, 3);
const regularPosts = allPosts.filter((post) => !featuredPosts.includes(post));

// Helper function to get post image
const getPostImage = (post: BlogPost) => {
  if (post.featured_image) {
    return post.featured_image;
  } else if (post.youtube_url) {
    // Extract YouTube video ID and get thumbnail
    const videoId = post.youtube_url.match(
      /(?:youtu\.be\/|youtube\.com\/(?:embed\/|v\/|watch\?v=|watch\?.+&v=))([^&?]+)/,
    )?.[1];
    return videoId
      ? `https://img.youtube.com/vi/${videoId}/maxresdefault.jpg`
      : null;
  }
  return null;
};

// Helper function to truncate text
const truncateText = (text: string, length = 20) => {
  if (!text) return "";
  const words = text.split(" ");
  if (words.length <= length) return text;
  return words.slice(0, length).join(" ") + "...";
};
---

<BaseLayout>
  <title slot="title">Blog â€“ Corrison</title>

  <div class="container mx-auto px-4 py-12 mt-8">
    <h1 class="text-4xl font-bold mb-8">Blog. News. Updates.</h1>
    <p class="text-gray-700 sm:text-md dark:text-gray-700">
      Our AI Marketing Assistant is used to create some of this content. All
      content has been read and reworded before posting.
    </p>

    {/* Featured Posts Section */}
    {
      featuredPosts.length > 0 && (
        <div class="mb-16">
          <h2 class="text-2xl font-semibold mb-6">Featured Posts</h2>
          <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
            {featuredPosts.map((post) => (
              <a href={`/blog/${post.slug}`} class="group block">
                <div class="bg-white rounded-lg shadow-lg overflow-hidden h-full flex flex-col">
                  {getPostImage(post) && (
                    <div class="w-full h-48 overflow-hidden">
                      <img
                        src={getPostImage(post)}
                        alt={post.title}
                        class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                        onerror="this.onerror=null; this.src='/images/placeholder.png';"
                      />
                    </div>
                  )}
                  <div class="p-6 flex-grow flex flex-col">
                    <span class="inline-block bg-teal-50 text-teal-800 text-xs px-2 py-1 rounded-full mb-3">
                      Featured
                    </span>
                    <h3 class="text-xl font-bold text-gray-900 mb-2 group-hover:text-teal-700 transition-colors">
                      {post.title}
                    </h3>
                    <div class="prose text-gray-700 mb-4 flex-grow">
                      {post.content ? (
                        <p>
                          {truncateText(post.content.replace(/<[^>]*>/g, ""))}
                        </p>
                      ) : (
                        <p>{truncateText(post.excerpt || "")}</p>
                      )}
                    </div>
                    <span class="text-purple-600 group-hover:text-teal-800 group-hover:translate-x-1 transition-all inline-flex items-center">
                      Read More
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        class="h-4 w-4 ml-1"
                        viewBox="0 0 20 20"
                        fill="currentColor"
                      >
                        <path
                          fill-rule="evenodd"
                          d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z"
                          clip-rule="evenodd"
                        />
                      </svg>
                    </span>
                  </div>
                </div>
              </a>
            ))}
          </div>
        </div>
      )
    }

    {/* Regular Posts Grid */}
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {
        regularPosts.map((post) => (
          <article class="bg-white rounded-lg shadow-lg overflow-hidden h-full flex flex-col">
            <a href={`/blog/${post.slug}`} class="block h-full flex-col">
              {getPostImage(post) && (
                <div class="w-full h-48 overflow-hidden">
                  <img
                    src={getPostImage(post)}
                    alt={post.title}
                    class="w-full h-full object-cover hover:scale-105 transition-transform duration-300"
                    onerror="this.onerror=null; this.src='/images/placeholder.png';"
                  />
                </div>
              )}
              <div class="p-6 flex-grow flex flex-col">
                <h2 class="text-xl font-bold text-gray-900 mb-2 hover:text-teal-700 transition-colors">
                  {post.title}
                </h2>
                <div class="prose text-gray-700 mb-4 flex-grow">
                  {post.content ? (
                    <p>{truncateText(post.content.replace(/<[^>]*>/g, ""))}</p>
                  ) : (
                    <p>{truncateText(post.excerpt || "")}</p>
                  )}
                </div>
                <span class="text-purple-600 hover:text-teal-800 inline-flex items-center">
                  Read More
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    class="h-4 w-4 ml-1"
                    viewBox="0 0 20 20"
                    fill="currentColor"
                  >
                    <path
                      fill-rule="evenodd"
                      d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z"
                      clip-rule="evenodd"
                    />
                  </svg>
                </span>
              </div>
            </a>
          </article>
        ))
      }

      {
        allPosts.length === 0 && (
          <div class="col-span-1 md:col-span-2 lg:col-span-3 text-center py-12">
            <p class="text-gray-600 mb-4">No blog posts available yet.</p>
            <p class="text-gray-500">Check back soon for new content!</p>
          </div>
        )
      }
    </div>
  </div>
</BaseLayout>
