---
// src/pages/order-confirmation/[orderNumber].astro
import BaseLayout from "../../layouts/BaseLayout.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";

export async function getStaticPaths() {
  // Return empty array to enable SSR for this dynamic route
  return [];
}

const { orderNumber } = Astro.params;

// SEO meta information
const metaTitle = `Order ${orderNumber} – Corrison`;
const metaDescription =
  "View your order details and download digital products.";

// Get environment variables
const apiUrl =
  import.meta.env.PUBLIC_API_BASE_URL ||
  "https://corrison.corrisonapi.com/api/v1";
---

<BaseLayout>
  <Header slot="header" />
  <title slot="title">{metaTitle}</title>
  <meta slot="head" name="description" content={metaDescription} />
  <meta slot="head" property="og:title" content={metaTitle} />
  <meta slot="head" property="og:description" content={metaDescription} />
  <meta slot="head" property="og:type" content="website" />

  <div class="min-h-screen bg-gray-50">
    <!-- Loading State -->
    <div id="loading-state" class="container mx-auto px-4 py-16">
      <div class="max-w-2xl mx-auto text-center">
        <div
          class="animate-spin rounded-full h-12 w-12 border-b-2 border-green-600 mx-auto mb-4"
        >
        </div>
        <h1 class="text-2xl font-bold text-gray-900 mb-2">
          Loading Your Order
        </h1>
        <p class="text-gray-600">
          Please wait while we retrieve your order details...
        </p>
      </div>
    </div>

    <!-- Success State -->
    <div id="success-state" class="hidden container mx-auto px-4 py-16">
      <div class="max-w-4xl mx-auto">
        <!-- Success Header -->
        <div class="text-center mb-12">
          <div
            class="w-20 h-20 mx-auto bg-green-100 rounded-full flex items-center justify-center mb-6"
          >
            <svg
              class="w-10 h-10 text-green-600"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M5 13l4 4L19 7"></path>
            </svg>
          </div>
          <h1 class="text-3xl lg:text-4xl font-bold text-gray-900 mb-4">
            Order Confirmed
          </h1>
          <p class="text-lg text-gray-500">
            Order #<span id="order-number-display" class="font-mono"
              >{orderNumber}</span
            >
          </p>
        </div>

        <!-- Order Details Grid -->
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
          <!-- Order Items -->
          <div class="lg:col-span-2">
            <div
              class="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden"
            >
              <div class="px-6 py-4 border-b border-gray-200">
                <h2 class="text-lg font-semibold text-gray-900">Order Items</h2>
              </div>

              <div id="order-items-list" class="divide-y divide-gray-200">
                <!-- Items will be populated by JavaScript -->
              </div>
            </div>

            <!-- Digital Downloads Section -->
            <div id="downloads-section" class="hidden mt-8">
              <div
                class="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden"
              >
                <div class="px-6 py-4 border-b border-gray-200 bg-purple-50">
                  <div class="flex items-center">
                    <svg
                      class="w-6 h-6 text-purple-600 mr-3"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10"
                      ></path>
                    </svg>
                    <h2 class="text-lg font-semibold text-purple-900">
                      Download Your Files
                    </h2>
                  </div>
                  <p class="text-sm text-purple-700 mt-1">
                    Your digital products are ready for download
                  </p>
                </div>

                <div id="download-items-list" class="p-6">
                  <!-- Download items will be populated by JavaScript -->
                </div>
              </div>
            </div>
          </div>

          <!-- Order Summary -->
          <div>
            <div
              class="bg-white rounded-lg shadow-sm border border-gray-200 p-6"
            >
              <h3 class="text-lg font-semibold text-gray-900 mb-4">
                Order Summary
              </h3>

              <div class="space-y-3 mb-6">
                <div class="flex justify-between text-gray-600">
                  <span>Subtotal</span>
                  <span id="summary-subtotal">$0.00</span>
                </div>

                <div class="flex justify-between text-gray-600">
                  <span>Tax</span>
                  <span id="summary-tax">$0.00</span>
                </div>

                <div class="border-t border-gray-200 pt-3">
                  <div
                    class="flex justify-between text-lg font-semibold text-gray-900"
                  >
                    <span>Total</span>
                    <span id="summary-total">$0.00</span>
                  </div>
                </div>
              </div>

              <!-- Order Info -->
              <div class="space-y-3 text-sm border-t border-gray-200 pt-6">
                <div>
                  <span class="text-gray-600">Order Date:</span>
                  <span id="order-date" class="text-gray-900 font-medium ml-2"
                  ></span>
                </div>
                <div>
                  <span class="text-gray-600">Payment Status:</span>
                  <span id="payment-status" class="ml-2"></span>
                </div>
                <div>
                  <span class="text-gray-600">Email:</span>
                  <span
                    id="delivery-email"
                    class="text-gray-900 font-medium ml-2"></span>
                </div>
              </div>

              <!-- Action Buttons -->
              <div class="mt-6 space-y-3">
                <a
                  href="/orders"
                  class="block w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-3 px-4 rounded-lg transition-colors text-center"
                >
                  View Order History
                </a>
                <a
                  href="/ecommerce/products"
                  class="block w-full bg-gray-100 hover:bg-gray-200 text-gray-800 font-medium py-3 px-4 rounded-lg transition-colors text-center"
                >
                  Continue Shopping
                </a>
              </div>
            </div>

            <!-- Support Info -->
            <div class="mt-6 bg-blue-50 border border-blue-200 rounded-lg p-4">
              <h4 class="text-sm font-semibold text-blue-900 mb-2">
                Need Help?
              </h4>
              <p class="text-sm text-blue-700 mb-3">
                If you have any questions about your order or need assistance
                with downloads, we're here to help.
              </p>
              <a
                href="/contact"
                class="text-sm text-blue-600 hover:text-blue-700 font-medium"
              >
                Contact Support →
              </a>
            </div>
          </div>
        </div>

        <!-- Email Confirmation Notice -->
        <div class="mt-12 bg-green-50 border border-green-200 rounded-lg p-6">
          <div class="flex items-start">
            <svg
              class="w-6 h-6 text-green-600 mt-1 mr-4"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"
              ></path>
            </svg>
            <div>
              <h3 class="text-lg font-semibold text-green-900 mb-2">
                Order Confirmation Sent
              </h3>
              <p class="text-green-700">
                We've sent a confirmation email with your order details. Please
                check your spam folder if you don't see it within a few minutes.
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Error State -->
    <div id="error-state" class="hidden container mx-auto px-4 py-16">
      <div class="max-w-2xl mx-auto text-center">
        <div
          class="w-20 h-20 mx-auto bg-red-100 rounded-full flex items-center justify-center mb-6"
        >
          <svg
            class="w-10 h-10 text-red-600"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </div>
        <h1 class="text-3xl font-bold text-gray-900 mb-4">Order Not Found</h1>
        <p class="text-xl text-gray-600 mb-8" id="error-message">
          We couldn't find the order you're looking for. Please check your order
          number and try again.
        </p>
        <div class="space-x-4">
          <a
            href="/orders"
            class="inline-block bg-blue-600 text-white hover:bg-blue-700 font-medium px-6 py-3 rounded-lg transition-colors"
          >
            View Order History
          </a>
          <a
            href="/contact"
            class="inline-block border border-gray-300 text-gray-700 hover:bg-gray-50 font-medium px-6 py-3 rounded-lg transition-colors"
          >
            Contact Support
          </a>
        </div>
      </div>
    </div>
  </div>

  <Footer slot="footer" />
</BaseLayout>

<!-- Pass order number and API URL to JavaScript -->
<script is:inline define:vars={{ orderNumber, apiUrl }}>
  window.orderNumber = orderNumber;
  window.API_BASE = apiUrl;
</script>

<script is:inline>
  (function () {
    // DOM elements
    var elements = {
      loadingState: document.getElementById("loading-state"),
      successState: document.getElementById("success-state"),
      errorState: document.getElementById("error-state"),
      orderNumberDisplay: document.getElementById("order-number-display"),
      orderItemsList: document.getElementById("order-items-list"),
      downloadsSection: document.getElementById("downloads-section"),
      downloadItemsList: document.getElementById("download-items-list"),
      summarySubtotal: document.getElementById("summary-subtotal"),
      summaryTax: document.getElementById("summary-tax"),
      summaryTotal: document.getElementById("summary-total"),
      orderDate: document.getElementById("order-date"),
      paymentStatus: document.getElementById("payment-status"),
      deliveryEmail: document.getElementById("delivery-email"),
      errorMessage: document.getElementById("error-message"),
    };

    var orderData = null;
    var authToken = localStorage.getItem("access_token");

    // Initialize page
    function initializePage() {
      if (!window.orderNumber) {
        showErrorState("Invalid order number");
        return;
      }

      loadOrderData(window.orderNumber);
    }

    // Load order data
    function loadOrderData(orderNumber) {
      var headers = {
        "Content-Type": "application/json",
      };

      // Add auth header if available
      if (authToken) {
        headers["Authorization"] = "Bearer " + authToken;
      }

      fetch(window.API_BASE + "/orders/?order_number=" + orderNumber, {
        method: "GET",
        headers: headers,
        credentials: "include", // Important for session-based lookup
      })
        .then(function (response) {
          if (!response.ok) {
            if (response.status === 404) {
              throw new Error("Order not found");
            } else if (response.status === 401) {
              throw new Error("Please log in to view this order");
            } else {
              throw new Error("Failed to load order details");
            }
          }
          return response.json();
        })
        .then(function (data) {
          // Handle both single order and array response
          orderData = Array.isArray(data) ? data[0] : data;

          if (!orderData) {
            throw new Error("Order data is invalid");
          }

          renderOrderDetails();
          showSuccessState();
        })
        .catch(function (error) {
          console.error("Error loading order:", error);
          showErrorState(error.message);
        });
    }

    // Render order details
    function renderOrderDetails() {
      if (!orderData) return;

      // Update order number display
      if (elements.orderNumberDisplay) {
        elements.orderNumberDisplay.textContent =
          orderData.order_number || "N/A";
      }

      // Render order items
      renderOrderItems();

      // Update order summary
      updateOrderSummary();

      // Update order info
      updateOrderInfo();

      // Show download section if there are digital items
      if (orderData.has_digital_items || hasDigitalItems()) {
        renderDownloadSection();
      }
    }

    // Check if order has digital items
    function hasDigitalItems() {
      return (
        orderData.items &&
        orderData.items.some(function (item) {
          return item.is_digital;
        })
      );
    }

    // Render order items
    function renderOrderItems() {
      if (!elements.orderItemsList || !orderData.items) return;

      elements.orderItemsList.innerHTML = orderData.items
        .map(function (item) {
          var price = parseFloat(item.price || 0);
          var totalPrice = parseFloat(
            item.total_price || price * item.quantity,
          );

          return (
            '<div class="p-6">' +
            '<div class="flex items-start space-x-4">' +
            '<div class="flex-1 min-w-0">' +
            '<h3 class="text-lg font-medium text-gray-900">' +
            (item.product_name || "Unknown Product") +
            "</h3>" +
            '<div class="mt-2 flex items-center space-x-4 text-sm text-gray-600">' +
            "<span>Qty: " +
            (item.quantity || 1) +
            "</span>" +
            "<span>•</span>" +
            "<span>$" +
            price.toFixed(2) +
            " each</span>" +
            "</div>" +
            (item.is_digital
              ? '<div class="mt-2">' +
                '<span class="inline-flex items-center px-2 py-1 text-xs font-medium rounded-full bg-purple-100 text-purple-800">' +
                '<svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">' +
                '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10"></path>' +
                "</svg>" +
                "Digital Download" +
                "</span>" +
                "</div>"
              : "") +
            "</div>" +
            '<div class="text-right">' +
            '<div class="text-lg font-semibold text-gray-900">' +
            "$" +
            totalPrice.toFixed(2) +
            "</div>" +
            "</div>" +
            "</div>" +
            "</div>"
          );
        })
        .join("");
    }

    // Render download section
    function renderDownloadSection() {
      if (!elements.downloadsSection || !elements.downloadItemsList) return;

      var digitalItems = orderData.items.filter(function (item) {
        return item.is_digital;
      });

      if (digitalItems.length === 0) return;

      elements.downloadsSection.classList.remove("hidden");

      elements.downloadItemsList.innerHTML = digitalItems
        .map(function (item) {
          var canDownload = item.can_download !== false;
          var downloadUrl = item.download_url || "#";

          return (
            '<div class="flex items-center justify-between p-4 bg-gray-50 rounded-lg mb-3">' +
            '<div class="flex-1">' +
            '<h4 class="font-medium text-gray-900">' +
            item.product_name +
            "</h4>" +
            '<div class="flex items-center mt-1 text-sm text-gray-600">' +
            (item.download_expires_at
              ? "<span>Expires: " +
                new Date(item.download_expires_at).toLocaleDateString() +
                "</span>" +
                '<span class="mx-2">•</span>'
              : "") +
            "<span>Downloads: " +
            (item.download_count || 0) +
            "/" +
            (item.max_downloads || "Unlimited") +
            "</span>" +
            "</div>" +
            "</div>" +
            "<div>" +
            (canDownload && authToken
              ? '<a href="' +
                downloadUrl +
                '" ' +
                'class="inline-flex items-center px-4 py-2 bg-purple-600 hover:bg-purple-700 text-white font-medium rounded-lg transition-colors" ' +
                'target="_blank" rel="noopener noreferrer">' +
                '<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">' +
                '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>' +
                "</svg>" +
                "Download" +
                "</a>"
              : !authToken
                ? '<a href="/login?return=' +
                  encodeURIComponent(window.location.href) +
                  '" ' +
                  'class="inline-flex items-center px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors">' +
                  "Login to Download" +
                  "</a>"
                : '<span class="inline-flex items-center px-4 py-2 bg-gray-300 text-gray-600 font-medium rounded-lg cursor-not-allowed">' +
                  '<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">' +
                  '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728L5.636 5.636m12.728 12.728L18.364 5.636M5.636 18.364l12.728-12.728"></path>' +
                  "</svg>" +
                  "Expired" +
                  "</span>") +
            "</div>" +
            "</div>"
          );
        })
        .join("");
    }

    // Update order summary
    function updateOrderSummary() {
      var subtotal = parseFloat(orderData.subtotal || 0);
      var tax = parseFloat(orderData.tax_amount || 0);
      var total = parseFloat(orderData.total || 0);

      if (elements.summarySubtotal) {
        elements.summarySubtotal.textContent = "$" + subtotal.toFixed(2);
      }
      if (elements.summaryTax) {
        elements.summaryTax.textContent = "$" + tax.toFixed(2);
      }
      if (elements.summaryTotal) {
        elements.summaryTotal.textContent = "$" + total.toFixed(2);
      }
    }

    // Update order info
    function updateOrderInfo() {
      // Order date
      if (elements.orderDate && orderData.created_at) {
        var orderDate = new Date(orderData.created_at);
        elements.orderDate.textContent = orderDate.toLocaleDateString("en-US", {
          year: "numeric",
          month: "long",
          day: "numeric",
        });
      }

      // Payment status
      if (elements.paymentStatus) {
        var status = orderData.payment_status || "pending";
        var statusColors = {
          paid: "text-green-600",
          pending: "text-yellow-600",
          failed: "text-red-600",
          refunded: "text-gray-600",
        };

        elements.paymentStatus.textContent =
          status.charAt(0).toUpperCase() + status.slice(1);
        elements.paymentStatus.className =
          "ml-2 font-medium " + (statusColors[status] || "text-gray-600");
      }

      // Delivery email
      var deliveryEmail =
        orderData.delivery_email ||
        orderData.digital_delivery_email ||
        orderData.guest_email ||
        "N/A";
      if (elements.deliveryEmail) {
        elements.deliveryEmail.textContent = deliveryEmail;
      }
    }

    // State management functions
    function showSuccessState() {
      hideAllStates();
      elements.successState.classList.remove("hidden");
    }

    function showErrorState(message) {
      hideAllStates();
      if (elements.errorMessage) {
        elements.errorMessage.textContent = message;
      }
      elements.errorState.classList.remove("hidden");
    }

    function hideAllStates() {
      elements.loadingState.classList.add("hidden");
      elements.successState.classList.add("hidden");
      elements.errorState.classList.add("hidden");
    }

    // Initialize when DOM is ready
    document.addEventListener("DOMContentLoaded", initializePage);
  })();
</script>
